{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/commentStore.ts","app/stores/commonStore.ts","app/stores/modelStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","features/musicEvents/details/EventDetailedChat.tsx","features/musicEvents/details/EventDetailedHeader.tsx","features/musicEvents/details/EventDetailedInfo.tsx","features/musicEvents/details/EventDetailedSidebar.tsx","features/musicEvents/details/EventDetails.tsx","features/musicEvents/dashboard/EventFilters.tsx","features/profiles/FollowActionButton.tsx","features/profiles/ProfileCard.tsx","features/musicEvents/dashboard/EventListItemAttendee.tsx","features/musicEvents/dashboard/EventListItem.tsx","features/musicEvents/dashboard/EventList.tsx","features/musicEvents/dashboard/EventListItemPlaceholder.tsx","features/musicEvents/dashboard/EventDashboard.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/musicEvents/form/EventForm.tsx","app/layout/NavBar.tsx","features/errors/NotFound.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEvents.tsx","features/profiles/ProfileFollowings.tsx","app/common/photoUpload/PhotoCropper.tsx","app/common/photoUpload/WidgetDropzone.tsx","app/common/photoUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","MusicEvents","list","params","details","id","create","activity","update","join","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formInput","FormData","append","setMainPhoto","deletePhoto","updateFollowing","listFollowings","predicate","listEvents","Activity","init","Object","assign","ActivityFormValues","title","category","description","date","location","venue","Profile","displayName","image","ActivityStore","musicEventsRegistry","Map","selectedEvent","isEditable","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","clearPredicate","forEach","getMusicEvent","setMusicEvent","event","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","loadActivities","axiosParams","result","setPagination","setLoadingInitial","console","log","loadActivity","runInAction","state","createEvent","musicEvent","attendee","newEvent","updateEvent","updatedEvent","deleteEvent","updateAttendance","filter","cancelEventToggle","isCancelled","clearSelectedEvent","updateAttendeeFollowing","following","followersCnt","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","musicEvents","format","CommentStore","comments","hubConnection","createHubConnection","activityId","activityStore","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","stopHubConnection","stop","clearComments","addComment","invoke","CommonStore","window","localStorage","getItem","appLoaded","setToken","setAppLoaded","setItem","removeItem","ModalStore","modal","open","openModal","content","closeModal","ProfileStore","profile","loadingProfile","uploadingPhoto","followings","loadingFollowings","currentTab","userEvents","loadingEvents","setCurrentTab","loadProfile","photo","photos","isMainPhoto","setPhoto","p","followingCnt","loadFollowings","loadUserEvents","events","UserStore","creds","modalStore","logout","getUser","profileStore","commentStore","StoreContext","createContext","useStore","useContext","MyTextInput","props","useField","name","field","meta","Form","Field","touched","label","Label","basic","color","observer","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","Header","as","textAlign","placeholder","type","render","style","marginBottom","Button","positive","fluid","ValidationErrors","Message","List","map","err","i","Item","validationSchema","Yup","required","isValid","dirty","disabled","Segment","inverted","vertical","Container","Image","size","src","alt","marginLeft","isLoggedIn","Link","to","onClick","LoadingComponent","Dimmer","active","Loader","useEffect","attached","border","clearing","resetForm","rows","onKeyPress","e","shiftKey","preventDefault","Comment","Group","Avatar","Content","Author","Metadata","formatDistanceToNow","Text","activityImageStyle","activityImageTextStyle","bottom","left","width","height","padding","zIndex","top","ribbon","toLowerCase","floated","Grid","Column","Icon","verticalAlign","secondary","length","relaxed","divided","Extra","useParams","EventDetailedSidebar","EventDetailedInfo","Menu","marginTop","icon","has","locale","onChange","Reveal","animated","visible","hidden","handleFollow","Card","Description","extra","EventListItemAttendee","styles","borderColor","borderWidth","horizontal","Popup","hoverable","trigger","circular","bordered","EventListItem","groupedActivities","group","activities","sub","m","EventListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","useState","loadingNext","setLoadingNext","pageStart","loadMore","currentPage","hasMore","totalItems","initialLoad","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","text","MyDateInput","selected","useHistory","setEvent","nullable","enableReinitialize","uuid","handleFormSubmit","placeholderText","showTimeSelect","timeCaption","dateFormat","fixed","NavLink","exact","header","marginRight","avatar","spaced","Dropdown","pointing","NotFound","centered","Inline","primary","Modal","onClose","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoCropper","photoPreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","WidgetDropzone","setFiles","dropzoneStyle","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","conent","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","enablePhoto","setEnablePhoto","target","setTarget","widths","currentTarget","handleSetMainPhoto","handleDeletePhoto","pageSections","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","useLocation","finally","newestOnTop","rtl","pauseOnFocusLoss","path","HomePage","EventDashboard","EventDetails","EventForm","ProfilePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.834dd614.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    pageCount: number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination) {\r\n        this.data = data;\r\n        this.pagination = pagination; \r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 2) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { PaginatedResult } from '../models/pagination';\r\nimport { Photo, Profile, UserEvent } from '../models/profile';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { store } from '../stores/store';\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve,delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers!.Authorization = `Bearer ${token}`\r\n    return config;\r\n})\r\n\r\n\r\naxios.interceptors.response.use(async response => {\r\n\r\n    // Simulate loading if in development mode\r\n    if (process.env.NODE_ENV === 'development') {\r\n        await sleep(1000);\r\n    }\r\n    \r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (typeof data === 'string') {\r\n                toast.error(data);\r\n            }\r\n            if (config.method === 'get'\r\n                && data.errors.hasOwnProperty('id')) {\r\n                history.push('/not-found');\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            }\r\n            \r\n            \r\n            break;\r\n        case 401:\r\n            toast.error('unauthorised', {\r\n                position: \"bottom-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            break;\r\n        case 404:\r\n            history.push('not-found');\r\n            /*toast.error('not found', {\r\n                position: \"bottom-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });*/\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error');\r\n            // toast.error('server error', { theme: \"colored\" });\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\n//const responseBody = (response: AxiosResponse) => response ? response.data : [];\r\nconst responseBody = <T> (response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n        get: <T> (url: string) => axios.get<T>(url).then(responseBody),\r\n        post: <T> (url: string, body: { }) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    delete: <T>(url: string) => axios.delete<T>(url).then(responseBody)\r\n}\r\n\r\nconst MusicEvents = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', { params }).then(responseBody),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities/', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.delete<void>(`/activities/${id}`),\r\n    join: (id: string) => requests.post<void>(`/activities/${id}/join`, {})\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user)\r\n\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file: Blob) => {\r\n        let formInput = new FormData();\r\n        formInput.append('File', file);\r\n        return axios.post<Photo>('photos', formInput, {\r\n            headers: {'Content-type': 'multipart/form-data'}\r\n        })\r\n    },\r\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMainPhoto`, {}),\r\n    deletePhoto: (id: string) => requests.delete(`/photos/${id}`),\r\n    // updateProfile: \r\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\n    listFollowings: (username: string, predicate: string) => requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listEvents: (username: string, predicate: string) => requests.get<UserEvent[]>(`/profiles/${username}/events?predicate=${predicate}`)\r\n    \r\n}\r\n\r\n\r\nconst agent = {\r\n    MusicEvents,\r\n    Account,\r\n    Profiles\r\n}\r\n\r\nexport default agent;","import { Profile } from \"./profile\";\r\n\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date | null;\r\n    description: string;\r\n    category: string;\r\n    location: string;\r\n    venue: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isGoing: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    attendees?: Profile[];\r\n}\r\n\r\n\r\nexport class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\n\r\nexport class ActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    location: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: ActivityFormValues) {\r\n        if (activity) {\r\n            this.id = activity.id;\r\n            this.title = activity.title;\r\n            this.category = activity.category;\r\n            this.description = activity.description;\r\n            this.date = activity.date;\r\n            this.location = activity.location;\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCnt: number;\r\n    followingCnt: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor(user: User) {\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id: string;\r\n    url: string;\r\n    isMainPhoto: boolean;\r\n}\r\n\r\nexport interface UserEvent {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { format } from \"date-fns\";\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\n\r\nexport default class ActivityStore {\r\n    musicEventsRegistry = new Map<string, Activity>();\r\n    // can be null type\r\n    selectedEvent: Activity | undefined = undefined;\r\n    isEditable = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        // infer types whether action(method)\r\n            // or observable(property)\r\n        makeAutoObservable(this)\r\n\r\n        // react to changes \r\n        reaction(\r\n            // if any of the keys change\r\n            () => this.predicate.keys(),\r\n            () => {\r\n                this.pagingParams = new PagingParams();\r\n                this.musicEventsRegistry.clear();\r\n                this.loadActivities();\r\n            }\r\n\r\n\r\n        )\r\n    }\r\n\r\n    setPagingParams = (pagingParams: PagingParams) => {\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) => {\r\n        const clearPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if (key !== 'startDate')\r\n                    this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch (predicate) {\r\n            case 'all':\r\n                clearPredicate();\r\n                this.predicate.set('all', true);\r\n                break;\r\n            case 'isGoing':\r\n                clearPredicate();\r\n                this.predicate.set('isGoing', true);\r\n                break;\r\n            case 'isHost':\r\n                clearPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n                \r\n        }\r\n    }\r\n\r\n    get axiosParams() {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if (key === 'startDate') {\r\n                params.append(key, (value as Date).toString())\r\n            }\r\n            else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n    get activitiesByDate() {\r\n        return Array.from(this.musicEventsRegistry.values()).sort((a, b) => {\r\n            return a.date!.getTime() - b.date!.getTime();\r\n        })\r\n    }\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((musicEvents, event) => {\r\n                const date = format(event.date!, 'dd MMM yyyy');\r\n                musicEvents[date] = musicEvents[date] ? [...musicEvents[date], event] : [event];\r\n                return musicEvents;\r\n            }, {} as {[key: string]: Activity[] })\r\n        )\r\n    }\r\n\r\n    private getMusicEvent = (id: string) => {\r\n        return this.musicEventsRegistry.get(id);\r\n    }\r\n\r\n    private setMusicEvent = (event: Activity) => {\r\n        const user = store.userStore.user;\r\n        if (user) {\r\n            event.isGoing = event.attendees!.some(\r\n                a => a.username === user.username\r\n            )\r\n            event.isHost = event.hostUsername === user.username;\r\n            event.host = event.attendees?.find(x => x.username === event.hostUsername);\r\n\r\n        }\r\n        event.date = new Date(event.date!);\r\n        this.musicEventsRegistry.set(event.id, event);\r\n    }\r\n    // use arrow func\r\n    // otherwise, explicit bound is necessary to use \"this\"\r\n\r\n    // dont have to use async await\r\n    loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n\r\n\r\n        try {\r\n            const result = await agent.MusicEvents.list(this.axiosParams);\r\n            result.data.forEach(activity => {\r\n                this.setMusicEvent(activity);\r\n            })\r\n            this.setPagination(result.pagination);\r\n            this.setLoadingInitial(false);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setLoadingInitial(false);\r\n        }\r\n\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n\r\n    loadActivity = async (id: string) => {\r\n        let event = this.getMusicEvent(id);\r\n        if (event) {\r\n            this.selectedEvent = event;\r\n            return event;\r\n        }\r\n        else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                event = await agent.MusicEvents.details(id);\r\n                this.setMusicEvent(event);\r\n                runInAction(() => {\r\n                    this.selectedEvent = event;\r\n                })\r\n                \r\n                this.setLoadingInitial(false);\r\n                return event;\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n\r\n    createEvent = async (musicEvent: ActivityFormValues) => {\r\n\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n\r\n        try {\r\n            await agent.MusicEvents.create(musicEvent);\r\n            const newEvent = new Activity(musicEvent);\r\n            newEvent.hostUsername = user!.username;\r\n            newEvent.attendees = [attendee];\r\n            this.setMusicEvent(newEvent);\r\n\r\n            runInAction(() => {\r\n                this.selectedEvent = newEvent;\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n           \r\n            \r\n        }\r\n    }\r\n\r\n    updateEvent = async (musicEvent: ActivityFormValues) => {\r\n        \r\n        try {\r\n            await agent.MusicEvents.update(musicEvent);\r\n            runInAction(() => {\r\n                if (musicEvent.id) {\r\n                    let updatedEvent = { ...this.getMusicEvent(musicEvent.id), ...musicEvent }\r\n                    this.musicEventsRegistry.set(musicEvent.id, updatedEvent as Activity);\r\n                    this.selectedEvent = updatedEvent as Activity;\r\n                }\r\n                \r\n                \r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    deleteEvent = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.MusicEvents.delete(id);\r\n            runInAction(() => {\r\n                this.musicEventsRegistry.delete(id);\r\n                // to avoid showing the event after deletion\r\n                this.loading = false;\r\n            })\r\n        } catch (error){\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttendance = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.MusicEvents.join(this.selectedEvent!.id);\r\n            runInAction(() => {\r\n                if (this.selectedEvent?.isGoing) {\r\n                    this.selectedEvent.attendees = this.selectedEvent.attendees?.filter(\r\n                        a => a.username !== user?.username\r\n                    );\r\n                    this.selectedEvent.isGoing = false;\r\n                }\r\n                else {\r\n                    const attendee = new Profile(user!);\r\n                    this.selectedEvent?.attendees?.push(attendee);\r\n                    this.selectedEvent!.isGoing = true;\r\n                   \r\n                }\r\n\r\n                this.musicEventsRegistry.set(this.selectedEvent!.id, this.selectedEvent!);\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            // Always turn off loading when finished\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n\r\n    cancelEventToggle = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.MusicEvents.join(this.selectedEvent!.id);\r\n            runInAction(() => {\r\n                this.selectedEvent!.isCancelled = !this.selectedEvent?.isCancelled;\r\n                this.musicEventsRegistry.set(this.selectedEvent!.id, this.selectedEvent!);\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    clearSelectedEvent = () => {\r\n        this.selectedEvent = undefined;\r\n    }\r\n\r\n    updateAttendeeFollowing = (username: string) => {\r\n        this.musicEventsRegistry.forEach(activity => {\r\n            activity.attendees!.forEach(attendee => {\r\n                if (attendee.username === username) {\r\n                    attendee.following ? attendee.followersCnt-- : attendee.followersCnt++;\r\n                    attendee.following = !attendee.following;\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (activityId: string) => {\r\n        if (store.activityStore.selectedEvent) {\r\n            this.hubConnection = new HubConnectionBuilder()\r\n                .withUrl(process.env.REACT_APP_CHAT_URL +'?activityId=' + activityId, {\r\n                    accessTokenFactory: () => store.userStore.user?.token!\r\n                })\r\n                .withAutomaticReconnect()\r\n                .configureLogging(LogLevel.Information)\r\n                .build();\r\n\r\n            this.hubConnection.start()\r\n                .catch(error => console.log(\"Error while creating signalr connection: \", error));\r\n\r\n            this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n                // use run in action, since we are updating an observable\r\n                runInAction(() => {\r\n                    comments.forEach(comment => {\r\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    })\r\n                    this.comments = comments;\r\n                });\r\n\r\n            });\r\n\r\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.push(comment);\r\n                });\r\n            } )\r\n\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log(\"Error while stopping signalr connection: \", error));\r\n    }\r\n\r\n    // Clear comments when user disconnect\r\n    clearComments = () => {\r\n        this.comments = [];\r\n        this.stopHubConnection();\r\n\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        values.activityId = store.activityStore.selectedEvent?.id;\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment', values);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem('jwt', token)\r\n                }\r\n                else {\r\n                    window.localStorage.removeItem('jwt') \r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n    \r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal : Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { computed, makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserEvent } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploadingPhoto = false;\r\n    loading = false;\r\n    followings: Profile[] = [];\r\n    loadingFollowings: boolean = false;\r\n    currentTab = 0;\r\n    userEvents: UserEvent[] = [];\r\n    loadingEvents = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n\r\n        reaction(\r\n            () => this.currentTab, currentTab => {\r\n                if (currentTab === 3 || currentTab === 4) {\r\n                    const predicate = currentTab === 3 ? 'followers' : 'following';\r\n                    this.loadFollowings(predicate);\r\n                }\r\n                else {\r\n                    this.followings = [];\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setCurrentTab = (currentTab: any) => {\r\n        this.currentTab = currentTab;\r\n    }\r\n\r\n    get isCurrentUser() {\r\n\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.username === this.profile.username;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadProfile = async (username: string) => {\r\n        this.loadingProfile = true;\r\n        try {\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => {\r\n                this.profile = profile;\r\n                this.loadingProfile = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingProfile = false);\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploadingPhoto = false;\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos?.push(photo);\r\n                    if (photo.isMainPhoto && store.userStore.user) {\r\n                        store.userStore.setPhoto(photo.url);\r\n                        this.profile.image = photo.url;\r\n                    }\r\n                }\r\n\r\n                this.uploadingPhoto = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.uploadingPhoto = false);\r\n        }\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setPhoto(photo.url);\r\n            runInAction(() => {\r\n                \r\n                if (this.profile && this.profile.photos) {\r\n                    // Set current main photo to false\r\n                    this.profile.photos.find(p => p.isMainPhoto)!.isMainPhoto = false;\r\n                    // Set new photo as main photo\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMainPhoto = true;\r\n                    this.profile.image = photo.url;\r\n                    this.loading = false;\r\n                }\r\n            });\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false);\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => { this.loading = false; });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    // following property in the func signature is value that we will set the following to.\r\n    updateFollowing = async (username: string, following: boolean) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateFollowing(username);\r\n            store.activityStore.updateAttendeeFollowing(username);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.username !== store.userStore.user?.username\r\n                    && this.profile.username !== username) {\r\n                    following ? this.profile.followersCnt++ : this.profile.followersCnt--;\r\n                    this.profile.following = !this.profile.following;\r\n                }\r\n                if (this.profile && this.profile.username === store.userStore.user?.username) {\r\n                    following ? this.profile.followingCnt++ : this.profile.followingCnt--;\r\n                }\r\n                this.followings.forEach(profile => {\r\n                    if (profile.username === username) {\r\n                        // profile.following indicates what the following status currently is.\r\n                        profile.following ? profile.followersCnt-- : profile.followersCnt++;\r\n                        profile.following = !profile.following;\r\n                    }\r\n                })\r\n                this.loading = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => { this.loading = false; });\r\n\r\n        }\r\n    }\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n        this.loadingFollowings = true;\r\n        try {\r\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            runInAction(() => {\r\n                this.followings = followings;\r\n                this.loadingFollowings = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loadingFollowings = false; \r\n            })\r\n        }\r\n    }\r\n\r\n    loadUserEvents = async (username: string, predicate?: string) => {\r\n        this.loadingEvents = false;\r\n        try {\r\n            const events = await agent.Profiles.listEvents(username, predicate!);\r\n            runInAction(() => {\r\n                this.userEvents = events;\r\n                this.loadingEvents = false;\r\n            }) \r\n\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            runInAction(() => {\r\n                this.loadingEvents = false;\r\n            })\r\n        }\r\n    }\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\nimport { history } from \"../..\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push(\"/musicEvents\");\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push(\"/musicEvents\");\r\n            store.modalStore.closeModal();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setPhoto = (image: string) => {\r\n        if (this.user) {\r\n            this.user.image = image;\r\n        }\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modelStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n\r\n}\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport {  Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    type?: string;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>\r\n                    {meta.error}\r\n                </Label>) : null}\r\n        </Form.Field>\r\n    )\r\n\r\n}","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function LoginForm() {\r\n    const { userStore } = useStore();\r\n\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ email: '', password: '', error: null }}\r\n            onSubmit={(values, { setErrors }) => userStore.login(values).catch(error => setErrors({ error: \"Invalid email or password\" }))}\r\n        >\r\n            {({ handleSubmit, isSubmitting, errors }) => (\r\n                <Form className='ui form'\r\n                    onSubmit={handleSubmit}\r\n                    autoComplete='off' >\r\n                    <Header as=\"h2\" content=\"Login to Dachord\" color=\"teal\" textAlign=\"center\" />\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Password' type=\"password\" />\r\n                    <ErrorMessage\r\n                        name=\"error\"\r\n                        render={() =>\r\n                            <Label style={{ marginBottom: 10 }}\r\n                                basic\r\n                                color='red'\r\n                                content={errors.error}\r\n                            />}\r\n                        />\r\n                    <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\r\n                    \r\n                </Form>\r\n                )}\r\n        </Formik>\r\n        )\r\n})","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n    return (\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err: any, i: any) => (\r\n                        <Message.Item key={i}>\r\n                            {err}\r\n                        </Message.Item>\r\n                        ))}\r\n                    </Message.List>\r\n                )}\r\n        </Message>\r\n        )\r\n}","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from \"yup\";\r\nimport { ValidationError } from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer(function RegisterForm() {\r\n    const { userStore } = useStore();\r\n\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ displayName: \"\", username: \"\", email: '', password: '', error: null }}\r\n            onSubmit={(values, { setErrors }) => userStore.register(values).catch(error => setErrors({ error: error }))}\r\n\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required(),\r\n                username: Yup.string().required(),\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required(),\r\n            })}\r\n        >\r\n            {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n                <Form className='ui form error'\r\n                    onSubmit={handleSubmit}\r\n                    autoComplete='off' >\r\n                    <Header as=\"h2\" content=\"Sign up to Dachord\" color=\"teal\" textAlign=\"center\" />\r\n                    <MyTextInput name='displayName' placeholder='Display Name' />\r\n                    <MyTextInput name='username' placeholder='Username' />\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Password' type=\"password\" />\r\n                    <ErrorMessage\r\n                        name=\"error\"\r\n                        render={() =>\r\n                            <ValidationErrors errors={errors.error} />}\r\n                    />\r\n                    <Button disabled={!isValid || !dirty || isSubmitting}\r\n                        loading={isSubmitting} positive content='Register' type='submit' fluid />\r\n\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Header, Segment, Image, Button } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport LoginForm from '../users/LoginForm';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\nexport default observer(function HomePage() {\r\n    const { userStore, modalStore } = useStore();\r\n\r\n\r\n\r\n    return (\r\n        <Segment inverted textAlign=\"center\" vertical className=\"intropage\">\r\n            <Container>\r\n                <Header as='h1' inverted>\r\n                    <Image size='massive' src='/assets/logo.png' alt='logo' style={{ marginBottom: 12, marginLeft: -50 }} />\r\n                    Dachord\r\n                </Header>\r\n                {userStore.isLoggedIn ? (\r\n                    <>\r\n                        <Header as='h2' inverted content=\"Welcome to D'achord!\" />\r\n                        \r\n                        <Button as={Link} to='/musicEvents' size='huge' inverted>\r\n                            Go to D'achord!\r\n                        </Button>\r\n                        \r\n                    </>\r\n                    \r\n                ) : (\r\n                        <>\r\n                            <Button onClick={() => modalStore.openModal(<LoginForm/>)} size='huge' inverted> Login</Button>\r\n                            <Button onClick={() => modalStore.openModal(<RegisterForm/>)} size='huge' inverted> Sign Up</Button>\r\n                            </>\r\n                         )\r\n                    \r\n                    }\r\n                \r\n                \r\n            </Container>\r\n        </Segment>\r\n    )\r\n})","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n\r\n}\r\n\r\nexport default function LoadingComponent({ inverted = true,\r\n    content = \"Loading\"\r\n}: Props) {\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content} />\r\n        </Dimmer>)\r\n}","import { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Header, Comment, Button, Loader } from 'semantic-ui-react'\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport da from 'date-fns/locale/da/index';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\n\r\n\r\ninterface Props {\r\n    activityId: string;\r\n}\r\n\r\n// placeholder for chat section\r\nexport default observer(function EventDetailedChat({ activityId }: Props) {\r\n    const { commentStore } = useStore();\r\n\r\n    useEffect(() => {\r\n        if (activityId) {\r\n            commentStore.createHubConnection(activityId);\r\n        }\r\n        return () => {\r\n            commentStore.clearComments();\r\n        }\r\n    }, [commentStore, activityId]);\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{ border: 'none' }}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n                <Formik onSubmit={(values, { resetForm }) => commentStore.addComment(values).then(\r\n                    () => resetForm()\r\n                )}\r\n                    initialValues={{ body: '' }}\r\n                    validationSchema={Yup.object({\r\n                        body: Yup.string().required()\r\n                    })}\r\n                >\r\n                    {({ isSubmitting, isValid, handleSubmit }) => (\r\n                        <Form className='ui form'>\r\n\r\n                            <Field name='body'>\r\n                                {(props: FieldProps) => (\r\n                                    <div style={{ position: 'relative' }}>\r\n                                        <Loader active={isSubmitting} />\r\n                                        <textarea\r\n                                            placeholder='Enter a comment (Enter to submit, shift+enter to new line)'\r\n                                            rows={2}\r\n                                            {...props.field}\r\n                                            onKeyPress={e => {\r\n                                                if (e.key === 'Enter' && e.shiftKey) {\r\n                                                    // new line\r\n                                                    return;\r\n                                                }\r\n                                                if (e.key === 'Enter' && !e.shiftKey) {\r\n                                                    e.preventDefault();\r\n                                                    isValid && handleSubmit();\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n\r\n                <Comment.Group>\r\n                    {commentStore.comments.map(comment => (\r\n                        <Comment key={comment.id}>\r\n                            <Comment.Avatar src={ comment.image || '/assets/user.png'} />\r\n                            <Comment.Content>\r\n                                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n                                <Comment.Metadata>\r\n                                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                                </Comment.Metadata>\r\n                                <Comment.Text>{comment.body}</Comment.Text>\r\n                                \r\n                            </Comment.Content>\r\n                        </Comment>\r\n                    ))}\r\n\r\n                   \r\n                    \r\n                    \r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react'\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    event: Activity\r\n}\r\n\r\nexport default observer(function EventDetailedHeader({ event }: Props) {\r\n\r\n    const { activityStore: { updateAttendance, loading, cancelEventToggle    } } = useStore();\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{ padding: '0' }}>\r\n                {event.isCancelled &&\r\n                    <Label style={{position: 'absolute', zIndex: 1000, left: -14, top: 20}} ribbon color='red' content='Cancelled'\r\n/>}\r\n                <Image src={`/assets/eventImages/${event.category.toLowerCase()}.jpg`} fluid style={activityImageStyle} />\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={event.title}\r\n                                    style={{ color: 'white' }}\r\n                                />\r\n                                <p>{format(event.date!, 'dd MMM yyyy')}</p>\r\n                                <p>\r\n                                    Hosted by <strong>\r\n                                        <Link to={`/profiles/${event.host?.username}`}>\r\n                                        {event.host?.displayName}\r\n                                        </Link>\r\n                                        </strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {event.isHost ? (\r\n                    <>\r\n                        <Button\r\n                            color={event.isCancelled ? 'green' : 'red'}\r\n                            floated='left'\r\n                            basic\r\n                            content={event.isCancelled ? 'Re-create Event' : 'Cancel Event'}\r\n                            onClick={cancelEventToggle}\r\n                            loading={loading}\r\n                        />\r\n                        <Button as={Link}\r\n                            disabled={event.isCancelled}\r\n                            to={`/manage/${event.id}`} color='orange' floated='right'>\r\n                            Manage Event\r\n                        </Button>   \r\n                    </>\r\n                    \r\n                )\r\n                    : event.isGoing ? (\r\n                        <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>)\r\n\r\n                        : (<Button disabled={event.isCancelled} loading={loading} onClick={updateAttendance} color='teal'>Join Music Event</Button>)\r\n                        \r\n                }\r\n                \r\n                \r\n                \r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Segment, Grid, Icon } from 'semantic-ui-react'\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { format } from \"date-fns\";\r\n\r\n\r\ninterface Props {\r\n    event: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ event }: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info' />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{event.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal' />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <span>\r\n                            {format(event.date!, 'dd MMM yyyy h:mm aa')}\r\n                        </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal' />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{event.venue}, {event.location}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/models/activity'\r\n\r\n\r\ninterface Props {\r\n    activity: Activity;\r\n}\r\n\r\n\r\n// placeholder for sidebar\r\nexport default observer(function ActivityDetailedSidebar({ activity: { attendees, host}}: Props) {\r\n\r\n    if (!attendees) { return null;}\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {attendees.map(attendee => (\r\n                        <Item style={{ position: 'relative' }} key={attendee.username}>\r\n                            {attendee.username === host?.username &&\r\n                                <Label\r\n                                    style={{ position: 'absolute' }}\r\n                                    color='orange'\r\n                                    ribbon='right'\r\n                                >\r\n                                    Host\r\n                                </Label>}\r\n                            <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Item.Header as='h3'>\r\n                                    <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                                </Item.Header>\r\n                                {attendee.following &&\r\n                                    <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n                            </Item.Content>\r\n                        </Item>\r\n                        ))}\r\n                    \r\n\r\n                    \r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n\r\n\r\n\r\n\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport EventDetailedChat from './EventDetailedChat';\r\nimport EventDetailedHeader from './EventDetailedHeader';\r\nimport EventDetailedInfo from './EventDetailedInfo';\r\nimport EventDetailedSidebar from './EventDetailedSidebar';\r\n\r\n\r\n\r\nexport default observer( function EventDetails() {\r\n\r\n    const { activityStore } = useStore();\r\n    const { selectedEvent: musicEvent, loadActivity, loadingInitial, clearSelectedEvent } = activityStore;\r\n    const { id } = useParams<{id: string}>();\r\n\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id);\r\n        return () => clearSelectedEvent();\r\n\r\n    }, [id, loadActivity, clearSelectedEvent]);\r\n\r\n    if (loadingInitial || !musicEvent) return <LoadingComponent />;\r\n\r\n    return(\r\n        <Grid>\r\n            <Grid.Column width={6}>\r\n                <EventDetailedSidebar activity={musicEvent!} />\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n                <EventDetailedHeader event={musicEvent} />\r\n                <EventDetailedInfo event={musicEvent} />\r\n                <EventDetailedChat activityId={musicEvent.id} />\r\n            </Grid.Column>\r\n            \r\n        </Grid>\r\n    )\r\n})","import React from 'react'\r\nimport { Header, Menu } from 'semantic-ui-react'\r\nimport Calendar from 'react-calendar'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useStore } from '../../../app/stores/store'\r\n\r\nexport default observer(function EventFilters() {\r\n    const { activityStore: { predicate, setPredicate } } = useStore();\r\n\r\n\r\n    return (\r\n        <>\r\n            <Menu vertical size='large' style={{width:'100%',marginTop: 25}}>\r\n                <Header icon='filter' attached color='teal' content='Filters' />\r\n                <Menu.Item content='All Music Events' active={predicate.has('all')} onClick={() => setPredicate('all','true')} />\r\n                <Menu.Item content='Going to the event' active={predicate.has('isGoing')} onClick={() => setPredicate('isGoing', 'true')} />\r\n                <Menu.Item content='Hosting the event' active={predicate.has('isHost')} onClick={() => setPredicate('isHost', 'true')} />\r\n            </Menu>\r\n            <Header />\r\n            <Calendar locale=\"en-GB\" onChange={(date: Date) => setPredicate('startDate', date as Date)}\r\n                value={predicate.get('startDate') || new Date()}            />\r\n        </>\r\n        )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent } from 'react';\r\nimport { Button, Reveal } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nexport default observer(function FollowActionButton({ profile }: Props) {\r\n    const { profileStore, userStore } = useStore();\r\n    const { updateFollowing, loading } = profileStore;\r\n\r\n    if (userStore.user?.username === profile.username) return null;\r\n\r\n    function handleFollow(e: SyntheticEvent, username: string) {\r\n        e.preventDefault();\r\n        profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\r\n\t}\r\n\r\n\treturn (\r\n        <Reveal animated='move'>\r\n            <Reveal.Content visible style={{ width: '100%' }}>\r\n                <Button fluid color='violet' content={profile.following ? 'Following' : 'Not following'} />\r\n            </Reveal.Content>\r\n            <Reveal.Content hidden style={{ width: '100%' }}>\r\n                <Button fluid basic color={profile.following ? 'red' : 'green'} content={profile.following ? 'Unfollow' : 'Follow'}\r\n                    loading={loading}\r\n                    onClick={(e) => handleFollow(e, profile.username)} />\r\n            </Reveal.Content>\r\n        </Reveal>\r\n\t\t)\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Icon, Image } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowActionButton from './FollowActionButton';\r\n\r\ninterface Props {\r\n    profile: Profile\r\n}\r\n\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n\r\n    return (\r\n        <Card as={Link}\r\n            to={`/profiles/${profile.username}`}\r\n        >\r\n            <Image src={profile.image || '/assets/user.png'} />\r\n            <Card.Content>\r\n                <Card.Header>\r\n                    {profile.displayName}\r\n                </Card.Header>\r\n                <Card.Description>\r\n                    Bio goes here\r\n                </Card.Description>\r\n\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Icon name='user' />\r\n                {profile.followersCnt} followers\r\n            </Card.Content>\r\n            <FollowActionButton profile={profile} />\r\n        </Card>\r\n    )\r\n})","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, Image, Popup } from 'semantic-ui-react';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\n\r\ninterface Props {\r\n    attendees: Profile[];\r\n}\r\n\r\nexport default function EventListItemAttendee({ attendees }: Props) {\r\n    const styles = {\r\n        borderColor: \"blue\",\r\n        borderWidth: 3\r\n    }\r\n\r\n\r\n    return (\r\n        <List horizontal>\r\n            {attendees.map(attendee => (\r\n                <Popup hoverable\r\n                       key={attendee.username}\r\n                    trigger={\r\n                        <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n                            <Image size='mini' circular src={attendee.image || '/assets/user.png'}\r\n                                bordered\r\n                                style={attendee.following ? styles : null}\r\n                            />\r\n                        </List.Item>\r\n                    }>\r\n\r\n                    <Popup.Content>\r\n                        <ProfileCard profile={attendee}/>\r\n                    </Popup.Content>\r\n               </Popup>\r\n                \r\n                ))}\r\n            \r\n        </List>\r\n        )\r\n}","import { Link } from 'react-router-dom'\r\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react'\r\nimport { Activity } from '../../../app/models/activity'\r\nimport { format } from 'date-fns';\r\nimport EventListItemAttendee from './EventListItemAttendee';\r\n\r\ninterface Props {\r\n    event: Activity;\r\n\r\n}\r\n\r\nexport default function EventListItem({ event }: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment>\r\n                {event.isCancelled && \r\n                    <Label attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}}/>\r\n                }\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image style={{ marginBottom: 3 }} size='tiny' circular src={event.host?.image || '/assets/user.png' } />\r\n                        <Item.Content>\r\n                            <Item.Header as={Link} to={`/musicEvents/${event.id}`}>\r\n                                {event.title}\r\n                            </Item.Header>\r\n                            <Item.Description>\r\n                                Event created by <Link to={`/profiles/${event.hostUsername}`}>{event.host?.displayName}</Link>\r\n                            </Item.Description>\r\n                            {event.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='blue'>\r\n                                        You are hosting this event.\r\n                                    </Label>\r\n                                </Item.Description>\r\n                            )}\r\n                            {event.isGoing && !event.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='olive'>\r\n                                        You are going to this event.\r\n                                    </Label>\r\n                                </Item.Description>\r\n                            )}\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <Icon name='clock' /> {format(event.date!, 'dd MMM yyyy h:mm aa')}\r\n                <Icon name='marker' /> {event.venue}\r\n            </Segment>\r\n            <Segment secondary>\r\n                <EventListItemAttendee attendees={event.attendees!} />\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>{event.description}</span>\r\n                <Button as={Link} to={`/musicEvents/${event.id}`}\r\n                    color='teal'\r\n                    floated='right'\r\n                    content='View'\r\n                />\r\n            </Segment>\r\n        </Segment.Group>\r\n        )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { Fragment } from 'react';\r\nimport {Header } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport EventListItem from './EventListItem';\r\n\r\n\r\n\r\nexport default observer(function EventList() {\r\n    const { activityStore } = useStore();\r\n    const { groupedActivities } = activityStore;\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {groupedActivities.map(([group, activities]) => (\r\n                <Fragment key={group}>\r\n                        <Header sub color='teal'>\r\n                            {group}\r\n                    </Header>\r\n                    \r\n                        {activities.map(m => (\r\n                            <EventListItem key={m.id} event={m} />\r\n                        ))}\r\n                        \r\n                </Fragment>\r\n                ))}\r\n            </>\r\n        )\r\n})\r\n\r\n","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\n\nexport default function EventListItemPlaceholder() {\n    return (\n        <Fragment>\n            <Placeholder fluid style={{ marginTop: 25 }}>\n                <Segment.Group>\n                    <Segment style={{ minHeight: 110 }}>\n                        <Placeholder>\n                            <Placeholder.Header image>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Header>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    </Segment>\n                    <Segment>\n                        <Placeholder>\n                            <Placeholder.Line />\n                            <Placeholder.Line />\n                        </Placeholder>\n                    </Segment>\n                    <Segment secondary style={{ minHeight: 70 }} />\n                    <Segment clearing>\n                        <Button disabled color='blue' floated='right' content='View' />\n                    </Segment>\n                </Segment.Group>\n            </Placeholder>\n        </Fragment>\n    );\n};\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport {Button, Grid, Loader } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { PagingParams } from '../../../app/models/pagination';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport EventFilters from './EventFilters';\r\nimport EventList from './EventList';\r\nimport EventListItemPlaceholder from './EventListItemPlaceholder';\r\n\r\n\r\nexport default observer( function EventDashboard() {\r\n\r\n    const { activityStore } = useStore();\r\n    const { loadActivities, musicEventsRegistry, setPagingParams, pagination } = activityStore;\r\n    const [loadingNext, setLoadingNext] = useState(false);\r\n    \r\n\r\n\r\n\r\n    function handleGetNext() {\r\n        setLoadingNext(true);\r\n        setPagingParams(new PagingParams(pagination!.currentPage + 1))\r\n        loadActivities().then(() => setLoadingNext(false));\r\n    }\r\n\r\n\r\n    // destructure only activityStore from the whole store\r\n\r\n    useEffect(() => {\r\n        if (musicEventsRegistry.size <= 1) {\r\n            activityStore.loadActivities();\r\n        } \r\n        // todo (will be tested)\r\n        // loading icon appears during second add operation\r\n        // setSubmitting(false);\r\n\r\n        // notice empty dependency [] to avoid endless loop\r\n        // runs only one time\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [musicEventsRegistry.size, loadActivities])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <Grid>\r\n            <Grid.Column width=\"10\">\r\n                {activityStore.loadingInitial && !loadingNext ? (\r\n                    <>\r\n                        <EventListItemPlaceholder/>\r\n                        <EventListItemPlaceholder />\r\n                    </>\r\n                ) : (\r\n                        <InfiniteScroll pageStart={0}\r\n                            loadMore={handleGetNext}\r\n                            hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalItems}\r\n                            initialLoad={false}\r\n                        >\r\n                            <EventList />\r\n                        </InfiniteScroll>\r\n                        \r\n                        )}\r\n                \r\n                \r\n                \r\n            </Grid.Column>\r\n            <Grid.Column width=\"6\">\r\n               <EventFilters/>\r\n            </Grid.Column>\r\n            <Grid.Column width={8}>\r\n                <Loader active={loadingNext} />\r\n            </Grid.Column>\r\n        </Grid>\r\n\r\n\r\n    )\r\n})","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    rows: number;\r\n    label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n    const [field, meta] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <textarea {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>\r\n                    {meta.error}\r\n                </Label>) : null}\r\n        </Form.Field>\r\n    )\r\n\r\n}","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    placeholder: string;\r\n    name: string;\r\n    options: any;\r\n    label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n    const [field, meta, helpers] = useField(props.name);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.label}</label>\r\n            <Select\r\n                clearable\r\n                options={props.options}\r\n                value={field.value || null}\r\n                onChange={(e, d) => helpers.setValue(d.value)}\r\n                onBlur={() => helpers.setTouched(true)}\r\n                placeholder={props.placeholder}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>\r\n                    {meta.error}\r\n                </Label>) : null}\r\n        </Form.Field>\r\n    )\r\n\r\n}","export const categoryOptions = [\r\n\t{\r\n\t\ttext: \"Acoustic\", value: 'acoustic'\r\n\t},\r\n\t{\r\n\t\ttext: \"Classical\", value: 'classical'\r\n\t},\r\n\t{\r\n\t\ttext: \"General\", value: 'general'\r\n\t},\r\n\t{\r\n\t\ttext: \"Music\", value: 'music'\r\n\t},\r\n\t{\r\n\t\ttext: \"Performance\", value: 'performance'\r\n\t},\r\n\t{\r\n\t\ttext: \"Practice\", value: 'practice'\r\n\t},\r\n\t{\r\n\t\ttext: \"Rehearsal\", value: 'rehearsal'\r\n\t},\r\n\r\n]","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, { ReactDatePickerProps} from 'react-datepicker';\r\n\r\n\r\n\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n    const [field, meta, helpers] = useField(props.name!);\r\n    return (\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <DatePicker\r\n                {...field}\r\n                {...props}\r\n                selected={(field.value && new Date(field.value)) || null}\r\n                onChange={value => helpers.setValue(value)}\r\n\r\n            />\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>\r\n                    {meta.error}\r\n                </Label>) : null}\r\n        </Form.Field>\r\n    )\r\n\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { ChangeEvent } from 'react';\r\nimport { useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport {Button, FormField, Header, Label, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport MySelectInput from '../../../app/common/form/MySelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport MyDateInput from '../../../app/common/form/MyDateInput';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\n\r\n\r\nexport default observer( function EventForm(){\r\n    const history = useHistory();\r\n    const { activityStore } = useStore();\r\n    const { createEvent, updateEvent, loadActivity, loadingInitial } = activityStore;\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    const [event, setEvent] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    \r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('The event title is required.'),\r\n        description: Yup.string().required(\"The event description is required.\"),\r\n        category: Yup.string().required(),\r\n        location: Yup.string().required(),\r\n        date: Yup.string().required(\"Date is required.\").nullable(),\r\n        venue: Yup.string().required()\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id).then(event => setEvent(new ActivityFormValues(event)))\r\n    }, [id, loadActivity])\r\n\r\n    \r\n\r\n    function handleFormSubmit(event: ActivityFormValues) {\r\n        if (!event.id) {\r\n            let newEvent = {\r\n                ...event,\r\n                id: uuid()\r\n            };\r\n            createEvent(newEvent).then(() => {\r\n                history.push(`/musicEvents/${newEvent.id}`);\r\n            })\r\n        }\r\n        else {\r\n            updateEvent(event).then(() => {\r\n                history.push(`/musicEvents/${event.id}`);\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading Music Event...'/>\r\n\r\n\r\n    return(\r\n        <Segment clearing>\r\n            <Header content='Event Details' sub color='teal'/>\r\n            <Formik\r\n                validationSchema={validationSchema}\r\n                enableReinitialize\r\n                initialValues={event}\r\n                onSubmit={values => handleFormSubmit(values)}>\r\n                {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete=\"off\">\r\n                        <MyTextInput name=\"title\" placeholder=\"Title\"/>\r\n                        \r\n                        <MyTextArea rows={3} placeholder='Description' name=\"description\" />\r\n                        <MySelectInput options={categoryOptions} placeholder='Category' name=\"category\" />\r\n                        <MyDateInput\r\n                            placeholderText='Date'\r\n                            name=\"date\"\r\n                            showTimeSelect\r\n                            timeCaption=\"time\"\r\n                            dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                        />\r\n                        <Header content='Location Details' sub color='teal' />\r\n                        <MyTextInput placeholder='Location' name=\"location\"  />\r\n                        <MyTextInput placeholder='Venue' name=\"venue\"  />\r\n                        <Button\r\n                            disabled={isSubmitting || !dirty || !isValid}\r\n                            loading={isSubmitting}\r\n                            floated='right'\r\n                            positive\r\n                            type='submit'\r\n                            content='Submit' />\r\n                        <Button as={Link} to='/musicEvents' floated='right' type='button' content='Cancel' />\r\n\r\n                    </Form>\r\n                    \r\n                    )}\r\n            </Formik>\r\n            \r\n        </Segment>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Menu, Image, Dropdown } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\nexport default observer(function NavBar() {\r\n    const { userStore: { user, logout, isLoggedIn } } = useStore();\r\n    const x = user?.username;\r\n    console.log(\"navbar \" + x);\r\n    return (\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item as={NavLink} exact to='/' header>\r\n                    <img src='/assets/logo.png' alt='logo' style={{ marginRight: '10px' }} />\r\n                    Dachord\r\n                </Menu.Item>\r\n                {isLoggedIn &&\r\n                    <>\r\n                    <Menu.Item as={NavLink} to='/musicEvents' name=\"Latest Music Events\" />\r\n                        \r\n                        <Menu.Item>\r\n                        <Button as={NavLink} to='/createEvent' positive content=\"Create Music Event\" />\r\n                        </Menu.Item>\r\n                        <Menu.Item position='right'>\r\n                            <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\r\n                            <Dropdown pointing='top left' text={user?.displayName}>\r\n                                <Dropdown.Menu>\r\n                                <Dropdown.Item as={Link} to={`/profiles/${user?.username}`}\r\n                                        text='My Profile' icon='user' />\r\n                                    <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </Menu.Item>\r\n                    </>}\r\n\r\n            </Container>\r\n        </Menu>\r\n    )\r\n})","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Icon, Segment, Image } from 'semantic-ui-react';\r\n\r\nconst notFoundGif = './assets/rickroll-rick.gif'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Oh nooo! - We've looked everywhere and could not find the page.\r\n                Or maybe someone rickrolled you :D\r\n               \r\n            </Header>\r\n            <div><Image src={notFoundGif} size='medium' centered style={{\"padding\": \"14px\"}} /></div>\r\n            \r\n            <Segment.Inline>\r\n                <Button as={Link} to=\"/musicEvents\" primary>\r\n                    Take me to home!\r\n                </Button>\r\n                </Segment.Inline>\r\n        </Segment>\r\n        )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store';\r\n\r\nexport default observer(function ModalContainer() {\r\n    const { modalStore } = useStore();\r\n\r\n    return (\r\n        <Modal\r\n            open={modalStore.modal.open}\r\n            onClose={modalStore.closeModal}\r\n            size='mini'\r\n        >\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n\r\n        </Modal>\r\n    )\r\n})","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Grid, Header, Tab, TabProps, Image } from 'semantic-ui-react';\r\nimport { UserEvent } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nconst panes = [\r\n    { menuItem: 'Future Events', pane: { key: 'future' } },\r\n    { menuItem: 'Past Events', pane: { key: 'past' } },\r\n    { menuItem: 'Hosting', pane: { key: 'hosting' } }\r\n];\r\nexport default observer(function ProfileEvents() {\r\n    const { profileStore } = useStore();\r\n\r\n    const {\r\n        loadUserEvents,\r\n        profile,\r\n        loadingEvents,\r\n        userEvents,\r\n    } = profileStore;\r\n\r\n    useEffect(() => {\r\n        loadUserEvents(profile!.username);\r\n\r\n    }, [loadUserEvents, profile]);\r\n\r\n    const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n        loadUserEvents(profile!.username, panes[data.activeIndex as number].pane.key);\r\n    };\r\n\r\n    return (\r\n        <Tab.Pane loading={loadingEvents}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='calendar' content={'Events'} />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Tab\r\n                        panes={panes}\r\n                        menu={{ secondary: true, pointing: true }}\r\n                        onTabChange={(e, data) => handleTabChange(e, data)}\r\n                    />\r\n                    <br />\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {userEvents.map((activity: UserEvent) => (\r\n                            <Card\r\n                                as={Link}\r\n                                to={`/musicEvents/${activity.id}`}\r\n                                key={activity.id}\r\n                            >\r\n                                <Image\r\n                                    src={`/assets/eventImages/${activity.category.toLowerCase()}.jpg`}\r\n                                    style={{ minHeight: 100, objectFit: 'cover' }}\r\n                                />\r\n                                <Card.Content>\r\n                                    <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n                                    <Card.Meta textAlign='center'>\r\n                                        <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                                        <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                                    </Card.Meta>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n        )\r\n\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default observer(function ProfileFollowings() {\r\n    const { profileStore } = useStore();\r\n    const { profile, followings, loadingFollowings, currentTab } = profileStore;\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left'\r\n                        icon='user'\r\n                        content={currentTab === 3\r\n                            ? `People following ${profile?.displayName}`\r\n                            : `People ${profile?.displayName} is following`} />\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n                        {followings.map(profile => (\r\n                            <ProfileCard key={profile.username} profile={profile}/>\r\n                            ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n        )\r\n})","import React from \"react\";\r\nimport 'cropperjs/dist/cropper.css';\r\nimport { Cropper } from \"react-cropper\";\r\n\r\n\r\ninterface Props {\r\n    photoPreview: string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoCropper({ photoPreview, setCropper } : Props) {\r\n    return (\r\n        <Cropper\r\n            src={photoPreview}\r\n            style={{ height: 200, width: \"100%\" }}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized={cropper => setCropper(cropper)}\r\n\r\n        />\r\n\r\n        )\r\n}","import React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\n\r\ninterface Props {\r\n    setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function WidgetDropzone({ setFiles }: Props) {\r\n    const dropzoneStyle = {\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        textAlign: 'center' as 'center',\r\n        height: 200\r\n    }\r\n\r\n    const dropzonActive = {\r\n        borderColor:'green'\r\n    }\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n        })))\r\n        \r\n    }, [setFiles])\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n        \r\n    return (\r\n        <div {...getRootProps()}>\r\n            <input {...getInputProps()} style={isDragActive ? { ...dropzoneStyle, ...dropzonActive } : dropzoneStyle} />\r\n            <Icon name=\"upload\" size=\"huge\" />\r\n            <Header  conent='Drop photo here'/>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header, Image } from \"semantic-ui-react\";\r\nimport PhotoCropper from \"./PhotoCropper\";\r\nimport WidgetDropzone from \"./WidgetDropzone\";\r\n\r\n\r\ninterface Props {\r\n    loading: boolean;\r\n    uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto} : Props) {\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n\r\n    function onCrop() {\r\n        if (cropper) {\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((file: any) => { URL.revokeObjectURL(file.preview) })\r\n        }\r\n    },[files])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content=\"Step 1 - Add Photo\" />\r\n                <WidgetDropzone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content=\"Step 2 - Resize it\" />\r\n                {files && files.length > 0 && (\r\n                    <PhotoCropper setCropper={setCropper} photoPreview={files[0].preview}/>\r\n                    )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content=\"Step 3 - Upload\" />\r\n                {files && files.length > 0 && \r\n                    <>\r\n                        <div className='img-preview' style={{ minHeight: 200, overflow: 'hidden' }} />\r\n                        <Button.Group>\r\n                        <Button loading={loading } onClick={onCrop} positive icon='check'/>\r\n                        <Button disabled={loading} onClick={() => setFiles([])} icon='close'/>\r\n                        </Button.Group>\r\n                        </>}\r\n                \r\n            </Grid.Column>\r\n        </Grid>\r\n        )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent, useState } from 'react';\r\nimport { Tab, Header,Card, Image, Grid, Button } from 'semantic-ui-react';\r\nimport PhotoUploadWidget from '../../app/common/photoUpload/PhotoUploadWidget';\r\n\r\n\r\nimport { Photo, Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n\tconst { profileStore: { isCurrentUser, uploadPhoto, uploadingPhoto, loading, setMainPhoto, deletePhoto } } = useStore();\r\n\tconst [enablePhoto, setEnablePhoto] = useState(false);\r\n\tconst [target, setTarget] = useState('');\r\n\r\n\tfunction handlePhotoUpload(file: Blob) {\r\n\t\tuploadPhoto(file).then(() => setEnablePhoto(false));\r\n\t}\r\n\r\n\tfunction handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n\t\tsetTarget(e.currentTarget.name);\r\n\t\tsetMainPhoto(photo);\r\n\t}\r\n\r\n\tfunction handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n\t\tsetTarget(e.currentTarget.name);\r\n\t\tdeletePhoto(photo);\r\n    }\r\n\r\n\treturn (\r\n\t\t<Tab.Pane>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Header floated=\"left\" icon='image' content='Photos' />\r\n\t\t\t\t\t{isCurrentUser && (\r\n\t\t\t\t\t\t<Button floated='right' basic content={enablePhoto ? 'Cancel' : 'Add new photo'}\r\n\t\t\t\t\t\t\tonClick={() => setEnablePhoto(!enablePhoto)} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t{enablePhoto ? (\r\n\t\t\t\t\t\t<PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploadingPhoto} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Card.Group itemsPerRow={5}>\r\n\t\t\t\t\t\t\t\t{profile.photos?.map(photo => (\r\n\t\t\t\t\t\t\t\t\t<Card key={photo.id}>\r\n\t\t\t\t\t\t\t\t\t\t<Image src={photo.url} />\r\n\t\t\t\t\t\t\t\t\t\t{isCurrentUser && (\r\n\t\t\t\t\t\t\t\t\t\t\t<Button.Group fluid widths={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='green'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontent='Main'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={'main' + photo.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={photo.isMainPhoto}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={target === 'main' + photo.id && loading}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => handleSetMainPhoto(photo, e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button basic color='red' icon='trash'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={target === photo.id && loading}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={e => handleDeletePhoto(photo, e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={photo.isMainPhoto}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={photo.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t\t</Card.Group>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t\t\r\n\t\t\t\r\n\t\t</Tab.Pane>\r\n\t\t)\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileEvents from \"./ProfileEvents\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n    const { profileStore } = useStore();\r\n\r\n\r\n    const pageSections = [\r\n        { menuItem: 'About', render: () => <Tab.Pane>About Content</Tab.Pane> },\r\n        { menuItem: 'Photos', render: () => <ProfilePhotos profile={profile}/> },\r\n        { menuItem: 'Events', render: () => <ProfileEvents/> },\r\n        { menuItem: 'Followers', render: () => <ProfileFollowings/> },\r\n        { menuItem: 'Following', render: () => <ProfileFollowings /> }\r\n    ];\r\n\r\n    return (\r\n        <Tab\r\n            menu={{ fluid: true, vertical: false }}\r\n            menuPosition='left'\r\n            panes={pageSections}\r\n            onTabChange={(e, data) => { profileStore.setCurrentTab(data.activeIndex); }}\r\n        />\r\n\r\n        )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Divider, Grid, Header, Item, Reveal, Segment, Statistic } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowActionButton from './FollowActionButton';\r\n\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\n// need to make it observer even though we dont use store here\r\nexport default observer(function ProfileHeader({profile} : Props) {\r\n\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1' content={profile.displayName} />\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label='Followers' value={profile.followersCnt} />\r\n                        <Statistic label='Following' value={profile.followingCnt} />\r\n                    </Statistic.Group>\r\n                    <Divider />\r\n                    <FollowActionButton profile={profile}/>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n\tconst { username } = useParams<{ username: string }>();\r\n\tconst { profileStore } = useStore();\r\n\tconst { loadingProfile, loadProfile, profile, setCurrentTab } = profileStore;\r\n\r\n\tuseEffect(() => {\r\n\t\tloadProfile(username);\r\n\t\treturn () => {\r\n\t\t\tsetCurrentTab(0);\r\n\t\t}\r\n\t}, [loadProfile, username, setCurrentTab])\r\n\r\n\r\n\tif (loadingProfile) {\r\n\t\treturn <LoadingComponent content='Loading profile...' />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t{profile &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<ProfileHeader profile={profile} />\r\n\t\t\t\t\t<ProfileContent profile={profile} />\r\n\t\t\t\t\t</>}\r\n\t\t\t\t\t\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid>\r\n\t\t)\r\n})","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n    const { userStore: { isLoggedIn } } = useStore();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\r\n        />\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport { Route, Switch, useLocation } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Container } from 'semantic-ui-react';\r\nimport HomePage from '../../features/home/HomePage';\r\nimport EventDetails from '../../features/musicEvents/details/EventDetails';\r\nimport EventDashboard from '../../features/musicEvents/dashboard/EventDashboard';\r\nimport EventForm from '../../features/musicEvents/form/EventForm';\r\n\r\nimport NavBar from './NavBar';\r\nimport TestErrors from '../../features/errors/TestError';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport NotFound from '../../features/errors/NotFound';\r\nimport ServerError from '../../features/errors/ServerError';\r\nimport { useStore } from '../stores/store';\r\nimport { useEffect } from 'react';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport ModalContainer from '../common/modals/ModalContainer';\r\nimport LoginForm from '../../features/users/LoginForm';\r\nimport ProfilePage from '../../features/profiles/ProfilePage';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nfunction App() {\r\n    const location = useLocation();\r\n    const { commonStore, userStore } = useStore();\r\n\r\n    useEffect(() => {\r\n        if (commonStore.token) {\r\n            userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n        }\r\n        else {\r\n            commonStore.setAppLoaded();\r\n        }\r\n    }, [commonStore, userStore])\r\n\r\n\r\n    if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\r\n\r\n  return (\r\n      <>\r\n          <ToastContainer\r\n              position=\"bottom-right\"\r\n              autoClose={5000}\r\n              hideProgressBar={false}\r\n              newestOnTop={false}\r\n              closeOnClick\r\n              rtl={false}\r\n              pauseOnFocusLoss\r\n              draggable\r\n              pauseOnHover\r\n          />\r\n          <ModalContainer/>\r\n\r\n          <Route exact path='/' component={HomePage} />\r\n          <Route\r\n              path={'/(.+)'}\r\n              render={() => (<>\r\n                  <NavBar />\r\n                  <Container style={{ marginTop: '7em' }}>\r\n                      <Switch>\r\n                          <PrivateRoute exact path='/musicEvents' component={EventDashboard} />\r\n                          <PrivateRoute path='/musicEvents/:id' component={EventDetails} />\r\n                          <PrivateRoute key={location.key} path={['/createEvent', '/manage/:id']} component={EventForm} />\r\n                          <PrivateRoute path='/profiles/:username' component={ProfilePage} />\r\n                          {/*<PrivateRoute path='/errors' component={TestErrors} />*/}\r\n                          {/*<Route path='/server-error' component={ServerError} />*/}\r\n                          {/*<Route path='/login' component={LoginForm} />*/}\r\n                          <Route component={NotFound} />\r\n                      </Switch>\r\n                      \r\n                  </Container>\r\n              </>)}\r\n          />\r\n\r\n          \r\n\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './app/layout/styles.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport App from './app/layout/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store, StoreContext } from './app/stores/store';\r\nimport { Router  } from 'react-router-dom';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { createBrowserHistory } from 'history';\r\nimport ScrollTop from './app/layout/ScrollTop';\r\n\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  /*Commented strictmode to overcome \r\n   * the 3rd party deprecated implementation warnings*/\r\n\r\n    /*<React.StrictMode>*/\r\n    <StoreContext.Provider value={store}>\r\n        <Router history={history}>\r\n            <ScrollTop/>\r\n            <App />\r\n        </Router>\r\n        \r\n    </StoreContext.Provider>\r\n    \r\n  /*</React.StrictMode>*/,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
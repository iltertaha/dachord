[{"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\index.tsx":"1","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\reportWebVitals.ts":"2","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\store.ts":"3","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\App.tsx":"4","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\profileStore.ts":"5","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\userStore.ts":"6","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\activityStore.ts":"7","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\commonStore.ts":"8","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\modelStore.ts":"9","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\NavBar.tsx":"10","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\LoadingComponent.tsx":"11","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\home\\HomePage.tsx":"12","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\ServerError.tsx":"13","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\users\\LoginForm.tsx":"14","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfilePage.tsx":"15","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\TestError.tsx":"16","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\NotFound.tsx":"17","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\form\\EventForm.tsx":"18","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetails.tsx":"19","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventDashboard.tsx":"20","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\modals\\ModalContainer.tsx":"21","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\api\\agent.ts":"22","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\models\\activity.ts":"23","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\models\\profile.ts":"24","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\options\\categoryOptions.ts":"25","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\users\\RegisterForm.tsx":"26","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileContent.tsx":"27","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileHeader.tsx":"28","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\ValidationErrors.tsx":"29","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedHeader.tsx":"30","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedChat.tsx":"31","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedInfo.tsx":"32","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedSidebar.tsx":"33","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventFilters.tsx":"34","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventList.tsx":"35","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyTextArea.tsx":"36","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyTextInput.tsx":"37","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MySelectInput.tsx":"38","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyDateInput.tsx":"39","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfilePhotos.tsx":"40","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventListItem.tsx":"41","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventListItemAttendee.tsx":"42","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileCard.tsx":"43","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\PrivateRoute.tsx":"44","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\photoUpload\\PhotoUploadWidget.tsx":"45","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\photoUpload\\WidgetDropzone.tsx":"46","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\photoUpload\\PhotoCropper.tsx":"47","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\commentStore.ts":"48"},{"size":1196,"mtime":1658076314654,"results":"49","hashOfConfig":"50"},{"size":440,"mtime":1658076314655,"results":"51","hashOfConfig":"50"},{"size":905,"mtime":1659817784931,"results":"52","hashOfConfig":"50"},{"size":3017,"mtime":1659633931837,"results":"53","hashOfConfig":"50"},{"size":3219,"mtime":1659790365122,"results":"54","hashOfConfig":"50"},{"size":1770,"mtime":1659787488599,"results":"55","hashOfConfig":"50"},{"size":6820,"mtime":1659871208778,"results":"56","hashOfConfig":"50"},{"size":898,"mtime":1659640669281,"results":"57","hashOfConfig":"50"},{"size":517,"mtime":1659640662489,"results":"58","hashOfConfig":"50"},{"size":1892,"mtime":1659643792994,"results":"59","hashOfConfig":"50"},{"size":385,"mtime":1658076314626,"results":"60","hashOfConfig":"50"},{"size":1707,"mtime":1659635040705,"results":"61","hashOfConfig":"50"},{"size":822,"mtime":1658430525033,"results":"62","hashOfConfig":"50"},{"size":1675,"mtime":1658514538747,"results":"63","hashOfConfig":"50"},{"size":1034,"mtime":1659639855229,"results":"64","hashOfConfig":"50"},{"size":2017,"mtime":1658430525031,"results":"65","hashOfConfig":"50"},{"size":863,"mtime":1658518077614,"results":"66","hashOfConfig":"50"},{"size":4380,"mtime":1658675911262,"results":"67","hashOfConfig":"50"},{"size":1465,"mtime":1659871325370,"results":"68","hashOfConfig":"50"},{"size":1405,"mtime":1658076314643,"results":"69","hashOfConfig":"50"},{"size":544,"mtime":1658513995869,"results":"70","hashOfConfig":"50"},{"size":4477,"mtime":1659788988071,"results":"71","hashOfConfig":"50"},{"size":1125,"mtime":1658671827838,"results":"72","hashOfConfig":"50"},{"size":474,"mtime":1659550517268,"results":"73","hashOfConfig":"50"},{"size":375,"mtime":1658076314624,"results":"74","hashOfConfig":"50"},{"size":2158,"mtime":1658515192985,"results":"75","hashOfConfig":"50"},{"size":984,"mtime":1659553818419,"results":"76","hashOfConfig":"50"},{"size":1873,"mtime":1659553137403,"results":"77","hashOfConfig":"50"},{"size":577,"mtime":1658515177500,"results":"78","hashOfConfig":"50"},{"size":3568,"mtime":1658675253212,"results":"79","hashOfConfig":"50"},{"size":4233,"mtime":1659871045942,"results":"80","hashOfConfig":"50"},{"size":1762,"mtime":1658076314649,"results":"81","hashOfConfig":"50"},{"size":2155,"mtime":1658662756782,"results":"82","hashOfConfig":"50"},{"size":619,"mtime":1658076314643,"results":"83","hashOfConfig":"50"},{"size":903,"mtime":1658076314644,"results":"84","hashOfConfig":"50"},{"size":679,"mtime":1658343890451,"results":"85","hashOfConfig":"50"},{"size":679,"mtime":1658431891918,"results":"86","hashOfConfig":"50"},{"size":971,"mtime":1658343900817,"results":"87","hashOfConfig":"50"},{"size":825,"mtime":1658343912768,"results":"88","hashOfConfig":"50"},{"size":2587,"mtime":1659790576861,"results":"89","hashOfConfig":"50"},{"size":2765,"mtime":1659546363173,"results":"90","hashOfConfig":"50"},{"size":1075,"mtime":1658675751074,"results":"91","hashOfConfig":"50"},{"size":939,"mtime":1658675784784,"results":"92","hashOfConfig":"50"},{"size":569,"mtime":1659633357348,"results":"93","hashOfConfig":"50"},{"size":2045,"mtime":1659787981402,"results":"94","hashOfConfig":"50"},{"size":1162,"mtime":1659783536410,"results":"95","hashOfConfig":"50"},{"size":707,"mtime":1659786394135,"results":"96","hashOfConfig":"50"},{"size":2346,"mtime":1659871326047,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"11zz5g3",{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\index.tsx",[],["200","201"],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\reportWebVitals.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\store.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\App.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\profileStore.ts",["202"],"import { computed, makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploadingPhoto = false;\r\n    loading = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isCurrentUser() {\r\n\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.username === this.profile.username;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadProfile = async (username: string) => {\r\n        this.loadingProfile = true;\r\n        try {\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => {\r\n                this.profile = profile;\r\n                this.loadingProfile = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingProfile = false);\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploadingPhoto = false;\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos?.push(photo);\r\n                    if (photo.isMainPhoto && store.userStore.user) {\r\n                        store.userStore.setPhoto(photo.url);\r\n                        this.profile.image = photo.url;\r\n                    }\r\n                }\r\n\r\n                this.uploadingPhoto = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.uploadingPhoto = false);\r\n        }\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setPhoto(photo.url);\r\n            runInAction(() => {\r\n                \r\n                if (this.profile && this.profile.photos) {\r\n                    // Set current main photo to false\r\n                    this.profile.photos.find(p => p.isMainPhoto)!.isMainPhoto = false;\r\n                    // Set new photo as main photo\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMainPhoto = true;\r\n                    this.profile.image = photo.url;\r\n                    this.loading = false;\r\n                }\r\n            });\r\n        } catch (error) {\r\n            runInAction(() => this.loading = false);\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\r\n                    this.loading = false;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            runInAction(() => { this.loading = false; });\r\n            console.log(error);\r\n        }\r\n    }\r\n}","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\userStore.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\activityStore.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\commonStore.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\modelStore.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\NavBar.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\home\\HomePage.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\ServerError.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\users\\LoginForm.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfilePage.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\TestError.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\NotFound.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\form\\EventForm.tsx",["203","204","205","206","207"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { ChangeEvent } from 'react';\r\nimport { useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport {Button, FormField, Header, Label, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport MySelectInput from '../../../app/common/form/MySelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport MyDateInput from '../../../app/common/form/MyDateInput';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\n\r\n\r\nexport default observer( function EventForm(){\r\n    const history = useHistory();\r\n    const { activityStore } = useStore();\r\n    const { createEvent, updateEvent, loadActivity, loadingInitial } = activityStore;\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    const [event, setEvent] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    \r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('The event title is required.'),\r\n        description: Yup.string().required(\"The event description is required.\"),\r\n        category: Yup.string().required(),\r\n        location: Yup.string().required(),\r\n        date: Yup.string().required(\"Date is required.\").nullable(),\r\n        venue: Yup.string().required()\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id).then(event => setEvent(new ActivityFormValues(event)))\r\n    }, [id, loadActivity])\r\n\r\n    \r\n\r\n    function handleFormSubmit(event: ActivityFormValues) {\r\n        if (!event.id) {\r\n            let newEvent = {\r\n                ...event,\r\n                id: uuid()\r\n            };\r\n            createEvent(newEvent).then(() => {\r\n                history.push(`/musicEvents/${newEvent.id}`);\r\n            })\r\n        }\r\n        else {\r\n            updateEvent(event).then(() => {\r\n                history.push(`/musicEvents/${event.id}`);\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading Music Event...'/>\r\n\r\n\r\n    return(\r\n        <Segment clearing>\r\n            <Header content='Event Details' sub color='teal'/>\r\n            <Formik\r\n                validationSchema={validationSchema}\r\n                enableReinitialize\r\n                initialValues={event}\r\n                onSubmit={values => handleFormSubmit(values)}>\r\n                {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete=\"off\">\r\n                        <MyTextInput name=\"title\" placeholder=\"Title\"/>\r\n                        \r\n                        <MyTextArea rows={3} placeholder='Description' name=\"description\" />\r\n                        <MySelectInput options={categoryOptions} placeholder='Category' name=\"category\" />\r\n                        <MyDateInput\r\n                            placeholderText='Date'\r\n                            name=\"date\"\r\n                            showTimeSelect\r\n                            timeCaption=\"time\"\r\n                            dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                        />\r\n                        <Header content='Location Details' sub color='teal' />\r\n                        <MyTextInput placeholder='Location' name=\"location\"  />\r\n                        <MyTextInput placeholder='Venue' name=\"venue\"  />\r\n                        <Button\r\n                            disabled={isSubmitting || !dirty || !isValid}\r\n                            loading={isSubmitting}\r\n                            floated='right'\r\n                            positive\r\n                            type='submit'\r\n                            content='Submit' />\r\n                        <Button as={Link} to='/musicEvents' floated='right' type='button' content='Cancel' />\r\n\r\n                    </Form>\r\n                    \r\n                    )}\r\n            </Formik>\r\n            \r\n        </Segment>\r\n    )\r\n})","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetails.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventDashboard.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\modals\\ModalContainer.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\api\\agent.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\models\\activity.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\models\\profile.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\options\\categoryOptions.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\users\\RegisterForm.tsx",["208","209"],"import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from \"yup\";\r\nimport { ValidationError } from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer(function RegisterForm() {\r\n    const { userStore } = useStore();\r\n\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ displayName: \"\", username: \"\", email: '', password: '', error: null }}\r\n            onSubmit={(values, { setErrors }) => userStore.register(values).catch(error => setErrors({ error: error }))}\r\n\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required(),\r\n                username: Yup.string().required(),\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required(),\r\n            })}\r\n        >\r\n            {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n                <Form className='ui form error'\r\n                    onSubmit={handleSubmit}\r\n                    autoComplete='off' >\r\n                    <Header as=\"h2\" content=\"Sign up to Dachord\" color=\"teal\" textAlign=\"center\" />\r\n                    <MyTextInput name='displayName' placeholder='Display Name' />\r\n                    <MyTextInput name='username' placeholder='Username' />\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Password' type=\"password\" />\r\n                    <ErrorMessage\r\n                        name=\"error\"\r\n                        render={() =>\r\n                            <ValidationErrors errors={errors.error} />}\r\n                    />\r\n                    <Button disabled={!isValid || !dirty || isSubmitting}\r\n                        loading={isSubmitting} positive content='Register' type='submit' fluid />\r\n\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileContent.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileHeader.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\ValidationErrors.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedHeader.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedChat.tsx",["210","211","212"],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedInfo.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedSidebar.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventFilters.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventList.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyTextArea.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyTextInput.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MySelectInput.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyDateInput.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfilePhotos.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventListItem.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventListItemAttendee.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileCard.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\PrivateRoute.tsx",[],["213","214"],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\photoUpload\\PhotoUploadWidget.tsx",["215"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header, Image } from \"semantic-ui-react\";\r\nimport PhotoCropper from \"./PhotoCropper\";\r\nimport WidgetDropzone from \"./WidgetDropzone\";\r\n\r\n\r\ninterface Props {\r\n    loading: boolean;\r\n    uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto} : Props) {\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n\r\n    function onCrop() {\r\n        if (cropper) {\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((file: any) => { URL.revokeObjectURL(file.preview) })\r\n        }\r\n    },[files])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content=\"Step 1 - Add Photo\" />\r\n                <WidgetDropzone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content=\"Step 2 - Resize it\" />\r\n                {files && files.length > 0 && (\r\n                    <PhotoCropper setCropper={setCropper} photoPreview={files[0].preview}/>\r\n                    )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content=\"Step 3 - Upload\" />\r\n                {files && files.length > 0 && \r\n                    <>\r\n                        <div className='img-preview' style={{ minHeight: 200, overflow: 'hidden' }} />\r\n                        <Button.Group>\r\n                        <Button loading={loading } onClick={onCrop} positive icon='check'/>\r\n                        <Button disabled={loading} onClick={() => setFiles([])} icon='close'/>\r\n                        </Button.Group>\r\n                        </>}\r\n                \r\n            </Grid.Column>\r\n        </Grid>\r\n        )\r\n}","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\photoUpload\\WidgetDropzone.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\photoUpload\\PhotoCropper.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\commentStore.ts",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":1,"column":10,"nodeType":"222","messageId":"223","endLine":1,"endColumn":18},{"ruleId":"220","severity":1,"message":"224","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":21},{"ruleId":"220","severity":1,"message":"225","line":6,"column":17,"nodeType":"222","messageId":"223","endLine":6,"endColumn":26},{"ruleId":"220","severity":1,"message":"226","line":6,"column":36,"nodeType":"222","messageId":"223","endLine":6,"endColumn":41},{"ruleId":"220","severity":1,"message":"227","line":10,"column":24,"nodeType":"222","messageId":"223","endLine":10,"endColumn":29},{"ruleId":"220","severity":1,"message":"228","line":10,"column":31,"nodeType":"222","messageId":"223","endLine":10,"endColumn":43},{"ruleId":"220","severity":1,"message":"226","line":4,"column":26,"nodeType":"222","messageId":"223","endLine":4,"endColumn":31},{"ruleId":"220","severity":1,"message":"229","line":8,"column":10,"nodeType":"222","messageId":"223","endLine":8,"endColumn":25},{"ruleId":"220","severity":1,"message":"230","line":5,"column":36,"nodeType":"222","messageId":"223","endLine":5,"endColumn":42},{"ruleId":"220","severity":1,"message":"231","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":18},{"ruleId":"220","severity":1,"message":"232","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":10},{"ruleId":"216","replacedBy":"233"},{"ruleId":"218","replacedBy":"234"},{"ruleId":"220","severity":1,"message":"235","line":2,"column":32,"nodeType":"222","messageId":"223","endLine":2,"endColumn":37},"no-native-reassign",["236"],"no-negated-in-lhs",["237"],"@typescript-eslint/no-unused-vars","'computed' is defined but never used.","Identifier","unusedVar","'ChangeEvent' is defined but never used.","'FormField' is defined but never used.","'Label' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'ValidationError' is defined but never used.","'Button' is defined but never used.","'MyTextArea' is defined but never used.","'da' is defined but never used.",["236"],["237"],"'Image' is defined but never used.","no-global-assign","no-unsafe-negation"]
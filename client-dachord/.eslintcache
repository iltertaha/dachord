[{"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\index.tsx":"1","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\reportWebVitals.ts":"2","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\store.ts":"3","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\App.tsx":"4","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\profileStore.ts":"5","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\userStore.ts":"6","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\activityStore.ts":"7","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\commonStore.ts":"8","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\modelStore.ts":"9","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\NavBar.tsx":"10","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\LoadingComponent.tsx":"11","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\home\\HomePage.tsx":"12","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\ServerError.tsx":"13","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\users\\LoginForm.tsx":"14","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfilePage.tsx":"15","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\TestError.tsx":"16","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\NotFound.tsx":"17","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\form\\EventForm.tsx":"18","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetails.tsx":"19","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventDashboard.tsx":"20","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\modals\\ModalContainer.tsx":"21","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\api\\agent.ts":"22","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\models\\activity.ts":"23","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\models\\profile.ts":"24","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\options\\categoryOptions.ts":"25","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\users\\RegisterForm.tsx":"26","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileContent.tsx":"27","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileHeader.tsx":"28","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\ValidationErrors.tsx":"29","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedHeader.tsx":"30","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedChat.tsx":"31","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedInfo.tsx":"32","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedSidebar.tsx":"33","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventFilters.tsx":"34","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventList.tsx":"35","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyTextArea.tsx":"36","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyTextInput.tsx":"37","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MySelectInput.tsx":"38","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyDateInput.tsx":"39","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfilePhotos.tsx":"40","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventListItem.tsx":"41","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventListItemAttendee.tsx":"42","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileCard.tsx":"43","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\PrivateRoute.tsx":"44"},{"size":1196,"mtime":1658076314654,"results":"45","hashOfConfig":"46"},{"size":440,"mtime":1658076314655,"results":"47","hashOfConfig":"46"},{"size":789,"mtime":1659551874941,"results":"48","hashOfConfig":"46"},{"size":3017,"mtime":1659633931837,"results":"49","hashOfConfig":"46"},{"size":997,"mtime":1659640656886,"results":"50","hashOfConfig":"46"},{"size":1649,"mtime":1659640695469,"results":"51","hashOfConfig":"46"},{"size":6738,"mtime":1659640675752,"results":"52","hashOfConfig":"46"},{"size":898,"mtime":1659640669281,"results":"53","hashOfConfig":"46"},{"size":517,"mtime":1659640662489,"results":"54","hashOfConfig":"46"},{"size":1892,"mtime":1659643792994,"results":"55","hashOfConfig":"46"},{"size":385,"mtime":1658076314626,"results":"56","hashOfConfig":"46"},{"size":1707,"mtime":1659635040705,"results":"57","hashOfConfig":"46"},{"size":822,"mtime":1658430525033,"results":"58","hashOfConfig":"46"},{"size":1675,"mtime":1658514538747,"results":"59","hashOfConfig":"46"},{"size":1034,"mtime":1659639855229,"results":"60","hashOfConfig":"46"},{"size":2017,"mtime":1658430525031,"results":"61","hashOfConfig":"46"},{"size":863,"mtime":1658518077614,"results":"62","hashOfConfig":"46"},{"size":4380,"mtime":1658675911262,"results":"63","hashOfConfig":"46"},{"size":1353,"mtime":1658662779784,"results":"64","hashOfConfig":"46"},{"size":1405,"mtime":1658076314643,"results":"65","hashOfConfig":"46"},{"size":544,"mtime":1658513995869,"results":"66","hashOfConfig":"46"},{"size":4068,"mtime":1659642875866,"results":"67","hashOfConfig":"46"},{"size":1125,"mtime":1658671827838,"results":"68","hashOfConfig":"46"},{"size":474,"mtime":1659550517268,"results":"69","hashOfConfig":"46"},{"size":375,"mtime":1658076314624,"results":"70","hashOfConfig":"46"},{"size":2158,"mtime":1658515192985,"results":"71","hashOfConfig":"46"},{"size":984,"mtime":1659553818419,"results":"72","hashOfConfig":"46"},{"size":1873,"mtime":1659553137403,"results":"73","hashOfConfig":"46"},{"size":577,"mtime":1658515177500,"results":"74","hashOfConfig":"46"},{"size":3568,"mtime":1658675253212,"results":"75","hashOfConfig":"46"},{"size":2453,"mtime":1658076314647,"results":"76","hashOfConfig":"46"},{"size":1762,"mtime":1658076314649,"results":"77","hashOfConfig":"46"},{"size":2155,"mtime":1658662756782,"results":"78","hashOfConfig":"46"},{"size":619,"mtime":1658076314643,"results":"79","hashOfConfig":"46"},{"size":903,"mtime":1658076314644,"results":"80","hashOfConfig":"46"},{"size":679,"mtime":1658343890451,"results":"81","hashOfConfig":"46"},{"size":679,"mtime":1658431891918,"results":"82","hashOfConfig":"46"},{"size":971,"mtime":1658343900817,"results":"83","hashOfConfig":"46"},{"size":825,"mtime":1658343912768,"results":"84","hashOfConfig":"46"},{"size":1222,"mtime":1659638543791,"results":"85","hashOfConfig":"46"},{"size":2765,"mtime":1659546363173,"results":"86","hashOfConfig":"46"},{"size":1075,"mtime":1658675751074,"results":"87","hashOfConfig":"46"},{"size":939,"mtime":1658675784784,"results":"88","hashOfConfig":"46"},{"size":569,"mtime":1659633357348,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"11zz5g3",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\index.tsx",[],["184","185"],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\reportWebVitals.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\store.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\App.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\profileStore.ts",["186"],"import { computed, makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isCurrentUser() {\r\n\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.username === this.profile.username;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadProfile = async (username: string) => {\r\n        this.loadingProfile = true;\r\n        try {\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => {\r\n                this.profile = profile;\r\n                this.loadingProfile = false;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(() => this.loadingProfile = false);\r\n        }\r\n    }\r\n}","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\userStore.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\activityStore.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\commonStore.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\modelStore.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\NavBar.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\home\\HomePage.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\ServerError.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\users\\LoginForm.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfilePage.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\TestError.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\NotFound.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\form\\EventForm.tsx",["187","188","189","190","191"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { ChangeEvent } from 'react';\r\nimport { useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport {Button, FormField, Header, Label, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport MySelectInput from '../../../app/common/form/MySelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport MyDateInput from '../../../app/common/form/MyDateInput';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\n\r\n\r\nexport default observer( function EventForm(){\r\n    const history = useHistory();\r\n    const { activityStore } = useStore();\r\n    const { createEvent, updateEvent, loadActivity, loadingInitial } = activityStore;\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    const [event, setEvent] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    \r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('The event title is required.'),\r\n        description: Yup.string().required(\"The event description is required.\"),\r\n        category: Yup.string().required(),\r\n        location: Yup.string().required(),\r\n        date: Yup.string().required(\"Date is required.\").nullable(),\r\n        venue: Yup.string().required()\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id).then(event => setEvent(new ActivityFormValues(event)))\r\n    }, [id, loadActivity])\r\n\r\n    \r\n\r\n    function handleFormSubmit(event: ActivityFormValues) {\r\n        if (!event.id) {\r\n            let newEvent = {\r\n                ...event,\r\n                id: uuid()\r\n            };\r\n            createEvent(newEvent).then(() => {\r\n                history.push(`/musicEvents/${newEvent.id}`);\r\n            })\r\n        }\r\n        else {\r\n            updateEvent(event).then(() => {\r\n                history.push(`/musicEvents/${event.id}`);\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading Music Event...'/>\r\n\r\n\r\n    return(\r\n        <Segment clearing>\r\n            <Header content='Event Details' sub color='teal'/>\r\n            <Formik\r\n                validationSchema={validationSchema}\r\n                enableReinitialize\r\n                initialValues={event}\r\n                onSubmit={values => handleFormSubmit(values)}>\r\n                {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete=\"off\">\r\n                        <MyTextInput name=\"title\" placeholder=\"Title\"/>\r\n                        \r\n                        <MyTextArea rows={3} placeholder='Description' name=\"description\" />\r\n                        <MySelectInput options={categoryOptions} placeholder='Category' name=\"category\" />\r\n                        <MyDateInput\r\n                            placeholderText='Date'\r\n                            name=\"date\"\r\n                            showTimeSelect\r\n                            timeCaption=\"time\"\r\n                            dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                        />\r\n                        <Header content='Location Details' sub color='teal' />\r\n                        <MyTextInput placeholder='Location' name=\"location\"  />\r\n                        <MyTextInput placeholder='Venue' name=\"venue\"  />\r\n                        <Button\r\n                            disabled={isSubmitting || !dirty || !isValid}\r\n                            loading={isSubmitting}\r\n                            floated='right'\r\n                            positive\r\n                            type='submit'\r\n                            content='Submit' />\r\n                        <Button as={Link} to='/musicEvents' floated='right' type='button' content='Cancel' />\r\n\r\n                    </Form>\r\n                    \r\n                    )}\r\n            </Formik>\r\n            \r\n        </Segment>\r\n    )\r\n})","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetails.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventDashboard.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\modals\\ModalContainer.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\api\\agent.ts",["192"],"import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { Photo, Profile } from '../models/profile';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { store } from '../stores/store';\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve,delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers!.Authorization = `Bearer ${token}`\r\n    return config;\r\n})\r\n\r\n\r\naxios.interceptors.response.use(async response => {\r\n    await sleep(1000);\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (typeof data === 'string') {\r\n                toast.error(data);\r\n            }\r\n            if (config.method === 'get'\r\n                && data.errors.hasOwnProperty('id')) {\r\n                history.push('/not-found');\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            }\r\n            \r\n            \r\n            break;\r\n        case 401:\r\n            toast.error('unauthorised', {\r\n                position: \"bottom-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            break;\r\n        case 404:\r\n            history.push('not-found');\r\n            /*toast.error('not found', {\r\n                position: \"bottom-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });*/\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error');\r\n            // toast.error('server error', { theme: \"colored\" });\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\n//const responseBody = (response: AxiosResponse) => response ? response.data : [];\r\nconst responseBody = <T> (response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n        get: <T> (url: string) => axios.get<T>(url).then(responseBody),\r\n        post: <T> (url: string, body: { }) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    delete: <T>(url: string) => axios.delete<T>(url).then(responseBody)\r\n}\r\n\r\nconst MusicEvents = {\r\n    list: () => requests.get<Activity[]>('/activities'),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities/', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.delete<void>(`/activities/${id}`),\r\n    join: (id: string) => requests.post<void>(`/activities/${id}/join`, {})\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user)\r\n\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`)\r\n}\r\n\r\n\r\nconst agent = {\r\n    MusicEvents,\r\n    Account,\r\n    Profiles\r\n}\r\n\r\nexport default agent;","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\models\\activity.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\models\\profile.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\options\\categoryOptions.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\users\\RegisterForm.tsx",["193","194"],"import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from \"yup\";\r\nimport { ValidationError } from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer(function RegisterForm() {\r\n    const { userStore } = useStore();\r\n\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ displayName: \"\", username: \"\", email: '', password: '', error: null }}\r\n            onSubmit={(values, { setErrors }) => userStore.register(values).catch(error => setErrors({ error: error }))}\r\n\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required(),\r\n                username: Yup.string().required(),\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required(),\r\n            })}\r\n        >\r\n            {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n                <Form className='ui form error'\r\n                    onSubmit={handleSubmit}\r\n                    autoComplete='off' >\r\n                    <Header as=\"h2\" content=\"Sign up to Dachord\" color=\"teal\" textAlign=\"center\" />\r\n                    <MyTextInput name='displayName' placeholder='Display Name' />\r\n                    <MyTextInput name='username' placeholder='Username' />\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Password' type=\"password\" />\r\n                    <ErrorMessage\r\n                        name=\"error\"\r\n                        render={() =>\r\n                            <ValidationErrors errors={errors.error} />}\r\n                    />\r\n                    <Button disabled={!isValid || !dirty || isSubmitting}\r\n                        loading={isSubmitting} positive content='Register' type='submit' fluid />\r\n\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileContent.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileHeader.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\ValidationErrors.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedHeader.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedChat.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedInfo.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedSidebar.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventFilters.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventList.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyTextArea.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyTextInput.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MySelectInput.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyDateInput.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfilePhotos.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventListItem.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventListItemAttendee.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileCard.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\PrivateRoute.tsx",[],["195","196"],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":18},{"ruleId":"201","severity":1,"message":"205","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":21},{"ruleId":"201","severity":1,"message":"206","line":6,"column":17,"nodeType":"203","messageId":"204","endLine":6,"endColumn":26},{"ruleId":"201","severity":1,"message":"207","line":6,"column":36,"nodeType":"203","messageId":"204","endLine":6,"endColumn":41},{"ruleId":"201","severity":1,"message":"208","line":10,"column":24,"nodeType":"203","messageId":"204","endLine":10,"endColumn":29},{"ruleId":"201","severity":1,"message":"209","line":10,"column":31,"nodeType":"203","messageId":"204","endLine":10,"endColumn":43},{"ruleId":"201","severity":1,"message":"210","line":5,"column":10,"nodeType":"203","messageId":"204","endLine":5,"endColumn":15},{"ruleId":"201","severity":1,"message":"207","line":4,"column":26,"nodeType":"203","messageId":"204","endLine":4,"endColumn":31},{"ruleId":"201","severity":1,"message":"211","line":8,"column":10,"nodeType":"203","messageId":"204","endLine":8,"endColumn":25},{"ruleId":"197","replacedBy":"212"},{"ruleId":"199","replacedBy":"213"},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"@typescript-eslint/no-unused-vars","'computed' is defined but never used.","Identifier","unusedVar","'ChangeEvent' is defined but never used.","'FormField' is defined but never used.","'Label' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'Photo' is defined but never used.","'ValidationError' is defined but never used.",["214"],["215"],"no-global-assign","no-unsafe-negation"]
[{"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\index.tsx":"1","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\reportWebVitals.ts":"2","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\store.ts":"3","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\App.tsx":"4","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\profileStore.ts":"5","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\userStore.ts":"6","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\activityStore.ts":"7","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\commonStore.ts":"8","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\modelStore.ts":"9","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\NavBar.tsx":"10","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\LoadingComponent.tsx":"11","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\home\\HomePage.tsx":"12","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\ServerError.tsx":"13","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\users\\LoginForm.tsx":"14","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfilePage.tsx":"15","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\TestError.tsx":"16","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\NotFound.tsx":"17","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\form\\EventForm.tsx":"18","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetails.tsx":"19","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventDashboard.tsx":"20","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\modals\\ModalContainer.tsx":"21","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\api\\agent.ts":"22","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\models\\activity.ts":"23","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\models\\profile.ts":"24","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\options\\categoryOptions.ts":"25","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\users\\RegisterForm.tsx":"26","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileContent.tsx":"27","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileHeader.tsx":"28","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\ValidationErrors.tsx":"29","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedHeader.tsx":"30","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedChat.tsx":"31","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedInfo.tsx":"32","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedSidebar.tsx":"33","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventFilters.tsx":"34","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventList.tsx":"35","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyTextArea.tsx":"36","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyTextInput.tsx":"37","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MySelectInput.tsx":"38","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyDateInput.tsx":"39","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfilePhotos.tsx":"40","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventListItem.tsx":"41","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventListItemAttendee.tsx":"42","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileCard.tsx":"43","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\PrivateRoute.tsx":"44","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\photoUpload\\PhotoUploadWidget.tsx":"45","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\photoUpload\\WidgetDropzone.tsx":"46","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\photoUpload\\PhotoCropper.tsx":"47","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\commentStore.ts":"48","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\FollowActionButton.tsx":"49","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileFollowings.tsx":"50"},{"size":1196,"mtime":1658076314654,"results":"51","hashOfConfig":"52"},{"size":440,"mtime":1658076314655,"results":"53","hashOfConfig":"52"},{"size":905,"mtime":1659817784931,"results":"54","hashOfConfig":"52"},{"size":3017,"mtime":1659633931837,"results":"55","hashOfConfig":"52"},{"size":5882,"mtime":1660059844945,"results":"56","hashOfConfig":"52"},{"size":1770,"mtime":1659787488599,"results":"57","hashOfConfig":"52"},{"size":7253,"mtime":1659984048719,"results":"58","hashOfConfig":"52"},{"size":898,"mtime":1659640669281,"results":"59","hashOfConfig":"52"},{"size":517,"mtime":1659640662489,"results":"60","hashOfConfig":"52"},{"size":1892,"mtime":1659643792994,"results":"61","hashOfConfig":"52"},{"size":385,"mtime":1658076314626,"results":"62","hashOfConfig":"52"},{"size":1707,"mtime":1659635040705,"results":"63","hashOfConfig":"52"},{"size":822,"mtime":1658430525033,"results":"64","hashOfConfig":"52"},{"size":1675,"mtime":1658514538747,"results":"65","hashOfConfig":"52"},{"size":1068,"mtime":1660060097454,"results":"66","hashOfConfig":"52"},{"size":2017,"mtime":1658430525031,"results":"67","hashOfConfig":"52"},{"size":863,"mtime":1658518077614,"results":"68","hashOfConfig":"52"},{"size":4380,"mtime":1658675911262,"results":"69","hashOfConfig":"52"},{"size":1465,"mtime":1659871325370,"results":"70","hashOfConfig":"52"},{"size":1405,"mtime":1658076314643,"results":"71","hashOfConfig":"52"},{"size":544,"mtime":1658513995869,"results":"72","hashOfConfig":"52"},{"size":4720,"mtime":1659990589423,"results":"73","hashOfConfig":"52"},{"size":1125,"mtime":1658671827838,"results":"74","hashOfConfig":"52"},{"size":553,"mtime":1659979904557,"results":"75","hashOfConfig":"52"},{"size":375,"mtime":1658076314624,"results":"76","hashOfConfig":"52"},{"size":2158,"mtime":1658515192985,"results":"77","hashOfConfig":"52"},{"size":1192,"mtime":1660059315733,"results":"78","hashOfConfig":"52"},{"size":1510,"mtime":1659989139178,"results":"79","hashOfConfig":"52"},{"size":577,"mtime":1658515177500,"results":"80","hashOfConfig":"52"},{"size":3568,"mtime":1658675253212,"results":"81","hashOfConfig":"52"},{"size":4233,"mtime":1659871045942,"results":"82","hashOfConfig":"52"},{"size":1762,"mtime":1658076314649,"results":"83","hashOfConfig":"52"},{"size":2216,"mtime":1659979964420,"results":"84","hashOfConfig":"52"},{"size":619,"mtime":1658076314643,"results":"85","hashOfConfig":"52"},{"size":903,"mtime":1658076314644,"results":"86","hashOfConfig":"52"},{"size":679,"mtime":1658343890451,"results":"87","hashOfConfig":"52"},{"size":679,"mtime":1658431891918,"results":"88","hashOfConfig":"52"},{"size":971,"mtime":1658343900817,"results":"89","hashOfConfig":"52"},{"size":825,"mtime":1658343912768,"results":"90","hashOfConfig":"52"},{"size":2587,"mtime":1659790576861,"results":"91","hashOfConfig":"52"},{"size":2765,"mtime":1659546363173,"results":"92","hashOfConfig":"52"},{"size":1311,"mtime":1659989434390,"results":"93","hashOfConfig":"52"},{"size":1069,"mtime":1659989158659,"results":"94","hashOfConfig":"52"},{"size":569,"mtime":1659633357348,"results":"95","hashOfConfig":"52"},{"size":2045,"mtime":1659787981402,"results":"96","hashOfConfig":"52"},{"size":1162,"mtime":1659783536410,"results":"97","hashOfConfig":"52"},{"size":707,"mtime":1659786394135,"results":"98","hashOfConfig":"52"},{"size":2346,"mtime":1659871326047,"results":"99","hashOfConfig":"52"},{"size":1368,"mtime":1659988962233,"results":"100","hashOfConfig":"52"},{"size":1252,"mtime":1660059605779,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"11zz5g3",{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\index.tsx",[],["209","210"],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\reportWebVitals.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\store.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\App.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\profileStore.ts",["211"],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\userStore.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\activityStore.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\commonStore.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\modelStore.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\NavBar.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\home\\HomePage.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\ServerError.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\users\\LoginForm.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfilePage.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\TestError.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\NotFound.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\form\\EventForm.tsx",["212","213","214","215","216"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { ChangeEvent } from 'react';\r\nimport { useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport {Button, FormField, Header, Label, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport MySelectInput from '../../../app/common/form/MySelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport MyDateInput from '../../../app/common/form/MyDateInput';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\n\r\n\r\nexport default observer( function EventForm(){\r\n    const history = useHistory();\r\n    const { activityStore } = useStore();\r\n    const { createEvent, updateEvent, loadActivity, loadingInitial } = activityStore;\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    const [event, setEvent] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    \r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('The event title is required.'),\r\n        description: Yup.string().required(\"The event description is required.\"),\r\n        category: Yup.string().required(),\r\n        location: Yup.string().required(),\r\n        date: Yup.string().required(\"Date is required.\").nullable(),\r\n        venue: Yup.string().required()\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id).then(event => setEvent(new ActivityFormValues(event)))\r\n    }, [id, loadActivity])\r\n\r\n    \r\n\r\n    function handleFormSubmit(event: ActivityFormValues) {\r\n        if (!event.id) {\r\n            let newEvent = {\r\n                ...event,\r\n                id: uuid()\r\n            };\r\n            createEvent(newEvent).then(() => {\r\n                history.push(`/musicEvents/${newEvent.id}`);\r\n            })\r\n        }\r\n        else {\r\n            updateEvent(event).then(() => {\r\n                history.push(`/musicEvents/${event.id}`);\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading Music Event...'/>\r\n\r\n\r\n    return(\r\n        <Segment clearing>\r\n            <Header content='Event Details' sub color='teal'/>\r\n            <Formik\r\n                validationSchema={validationSchema}\r\n                enableReinitialize\r\n                initialValues={event}\r\n                onSubmit={values => handleFormSubmit(values)}>\r\n                {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete=\"off\">\r\n                        <MyTextInput name=\"title\" placeholder=\"Title\"/>\r\n                        \r\n                        <MyTextArea rows={3} placeholder='Description' name=\"description\" />\r\n                        <MySelectInput options={categoryOptions} placeholder='Category' name=\"category\" />\r\n                        <MyDateInput\r\n                            placeholderText='Date'\r\n                            name=\"date\"\r\n                            showTimeSelect\r\n                            timeCaption=\"time\"\r\n                            dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                        />\r\n                        <Header content='Location Details' sub color='teal' />\r\n                        <MyTextInput placeholder='Location' name=\"location\"  />\r\n                        <MyTextInput placeholder='Venue' name=\"venue\"  />\r\n                        <Button\r\n                            disabled={isSubmitting || !dirty || !isValid}\r\n                            loading={isSubmitting}\r\n                            floated='right'\r\n                            positive\r\n                            type='submit'\r\n                            content='Submit' />\r\n                        <Button as={Link} to='/musicEvents' floated='right' type='button' content='Cancel' />\r\n\r\n                    </Form>\r\n                    \r\n                    )}\r\n            </Formik>\r\n            \r\n        </Segment>\r\n    )\r\n})","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetails.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventDashboard.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\modals\\ModalContainer.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\api\\agent.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\models\\activity.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\models\\profile.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\options\\categoryOptions.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\users\\RegisterForm.tsx",["217","218"],"import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from \"yup\";\r\nimport { ValidationError } from 'yup';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nexport default observer(function RegisterForm() {\r\n    const { userStore } = useStore();\r\n\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ displayName: \"\", username: \"\", email: '', password: '', error: null }}\r\n            onSubmit={(values, { setErrors }) => userStore.register(values).catch(error => setErrors({ error: error }))}\r\n\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required(),\r\n                username: Yup.string().required(),\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required(),\r\n            })}\r\n        >\r\n            {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n                <Form className='ui form error'\r\n                    onSubmit={handleSubmit}\r\n                    autoComplete='off' >\r\n                    <Header as=\"h2\" content=\"Sign up to Dachord\" color=\"teal\" textAlign=\"center\" />\r\n                    <MyTextInput name='displayName' placeholder='Display Name' />\r\n                    <MyTextInput name='username' placeholder='Username' />\r\n                    <MyTextInput name='email' placeholder='Email' />\r\n                    <MyTextInput name='password' placeholder='Password' type=\"password\" />\r\n                    <ErrorMessage\r\n                        name=\"error\"\r\n                        render={() =>\r\n                            <ValidationErrors errors={errors.error} />}\r\n                    />\r\n                    <Button disabled={!isValid || !dirty || isSubmitting}\r\n                        loading={isSubmitting} positive content='Register' type='submit' fluid />\r\n\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileContent.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileHeader.tsx",["219","220"],"import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Divider, Grid, Header, Item, Reveal, Segment, Statistic } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowActionButton from './FollowActionButton';\r\n\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n}\r\n\r\n// need to make it observer even though we dont use store here\r\nexport default observer(function ProfileHeader({profile} : Props) {\r\n\r\n    return (\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\r\n                            <Item.Content verticalAlign='middle'>\r\n                                <Header as='h1' content={profile.displayName} />\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <Grid.Column width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label='Followers' value={profile.followersCnt} />\r\n                        <Statistic label='Following' value={profile.followingCnt} />\r\n                    </Statistic.Group>\r\n                    <Divider />\r\n                    <FollowActionButton profile={profile}/>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\errors\\ValidationErrors.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedHeader.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedChat.tsx",["221","222","223"],"import { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Header, Comment, Button, Loader } from 'semantic-ui-react'\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport da from 'date-fns/locale/da/index';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\n\r\n\r\ninterface Props {\r\n    activityId: string;\r\n}\r\n\r\n// placeholder for chat section\r\nexport default observer(function EventDetailedChat({ activityId }: Props) {\r\n    const { commentStore } = useStore();\r\n\r\n    useEffect(() => {\r\n        if (activityId) {\r\n            commentStore.createHubConnection(activityId);\r\n        }\r\n        return () => {\r\n            commentStore.clearComments();\r\n        }\r\n    }, [commentStore, activityId]);\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{ border: 'none' }}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n                <Formik onSubmit={(values, { resetForm }) => commentStore.addComment(values).then(\r\n                    () => resetForm()\r\n                )}\r\n                    initialValues={{ body: '' }}\r\n                    validationSchema={Yup.object({\r\n                        body: Yup.string().required()\r\n                    })}\r\n                >\r\n                    {({ isSubmitting, isValid, handleSubmit }) => (\r\n                        <Form className='ui form'>\r\n\r\n                            <Field name='body'>\r\n                                {(props: FieldProps) => (\r\n                                    <div style={{ position: 'relative' }}>\r\n                                        <Loader active={isSubmitting} />\r\n                                        <textarea\r\n                                            placeholder='Enter a comment (Enter to submit, shift+enter to new line)'\r\n                                            rows={2}\r\n                                            {...props.field}\r\n                                            onKeyPress={e => {\r\n                                                if (e.key === 'Enter' && e.shiftKey) {\r\n                                                    // new line\r\n                                                    return;\r\n                                                }\r\n                                                if (e.key === 'Enter' && !e.shiftKey) {\r\n                                                    e.preventDefault();\r\n                                                    isValid && handleSubmit();\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n\r\n                <Comment.Group>\r\n                    {commentStore.comments.map(comment => (\r\n                        <Comment key={comment.id}>\r\n                            <Comment.Avatar src={ comment.image || '/assets/user.png'} />\r\n                            <Comment.Content>\r\n                                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n                                <Comment.Metadata>\r\n                                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                                </Comment.Metadata>\r\n                                <Comment.Text>{comment.body}</Comment.Text>\r\n                                \r\n                            </Comment.Content>\r\n                        </Comment>\r\n                    ))}\r\n\r\n                   \r\n                    \r\n                    \r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedInfo.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\details\\EventDetailedSidebar.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventFilters.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventList.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyTextArea.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyTextInput.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MySelectInput.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\form\\MyDateInput.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfilePhotos.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventListItem.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\musicEvents\\dashboard\\EventListItemAttendee.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileCard.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\layout\\PrivateRoute.tsx",[],["224","225"],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\photoUpload\\PhotoUploadWidget.tsx",["226"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header, Image } from \"semantic-ui-react\";\r\nimport PhotoCropper from \"./PhotoCropper\";\r\nimport WidgetDropzone from \"./WidgetDropzone\";\r\n\r\n\r\ninterface Props {\r\n    loading: boolean;\r\n    uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto} : Props) {\r\n    const [files, setFiles] = useState<any>([]);\r\n    const [cropper, setCropper] = useState<Cropper>();\r\n\r\n    function onCrop() {\r\n        if (cropper) {\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            files.forEach((file: any) => { URL.revokeObjectURL(file.preview) })\r\n        }\r\n    },[files])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content=\"Step 1 - Add Photo\" />\r\n                <WidgetDropzone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content=\"Step 2 - Resize it\" />\r\n                {files && files.length > 0 && (\r\n                    <PhotoCropper setCropper={setCropper} photoPreview={files[0].preview}/>\r\n                    )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1} />\r\n            <Grid.Column width={4}>\r\n                <Header color='teal' content=\"Step 3 - Upload\" />\r\n                {files && files.length > 0 && \r\n                    <>\r\n                        <div className='img-preview' style={{ minHeight: 200, overflow: 'hidden' }} />\r\n                        <Button.Group>\r\n                        <Button loading={loading } onClick={onCrop} positive icon='check'/>\r\n                        <Button disabled={loading} onClick={() => setFiles([])} icon='close'/>\r\n                        </Button.Group>\r\n                        </>}\r\n                \r\n            </Grid.Column>\r\n        </Grid>\r\n        )\r\n}","C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\photoUpload\\WidgetDropzone.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\common\\photoUpload\\PhotoCropper.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\app\\stores\\commentStore.ts",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\FollowActionButton.tsx",[],"C:\\Users\\ilter\\IdeaProjects\\dachord\\client-dachord\\src\\features\\profiles\\ProfileFollowings.tsx",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":1,"column":10,"nodeType":"233","messageId":"234","endLine":1,"endColumn":18},{"ruleId":"231","severity":1,"message":"235","line":3,"column":10,"nodeType":"233","messageId":"234","endLine":3,"endColumn":21},{"ruleId":"231","severity":1,"message":"236","line":6,"column":17,"nodeType":"233","messageId":"234","endLine":6,"endColumn":26},{"ruleId":"231","severity":1,"message":"237","line":6,"column":36,"nodeType":"233","messageId":"234","endLine":6,"endColumn":41},{"ruleId":"231","severity":1,"message":"238","line":10,"column":24,"nodeType":"233","messageId":"234","endLine":10,"endColumn":29},{"ruleId":"231","severity":1,"message":"239","line":10,"column":31,"nodeType":"233","messageId":"234","endLine":10,"endColumn":43},{"ruleId":"231","severity":1,"message":"237","line":4,"column":26,"nodeType":"233","messageId":"234","endLine":4,"endColumn":31},{"ruleId":"231","severity":1,"message":"240","line":8,"column":10,"nodeType":"233","messageId":"234","endLine":8,"endColumn":25},{"ruleId":"231","severity":1,"message":"241","line":3,"column":10,"nodeType":"233","messageId":"234","endLine":3,"endColumn":16},{"ruleId":"231","severity":1,"message":"242","line":3,"column":47,"nodeType":"233","messageId":"234","endLine":3,"endColumn":53},{"ruleId":"231","severity":1,"message":"241","line":5,"column":36,"nodeType":"233","messageId":"234","endLine":5,"endColumn":42},{"ruleId":"231","severity":1,"message":"243","line":6,"column":8,"nodeType":"233","messageId":"234","endLine":6,"endColumn":18},{"ruleId":"231","severity":1,"message":"244","line":9,"column":8,"nodeType":"233","messageId":"234","endLine":9,"endColumn":10},{"ruleId":"227","replacedBy":"245"},{"ruleId":"229","replacedBy":"246"},{"ruleId":"231","severity":1,"message":"247","line":2,"column":32,"nodeType":"233","messageId":"234","endLine":2,"endColumn":37},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"@typescript-eslint/no-unused-vars","'computed' is defined but never used.","Identifier","unusedVar","'ChangeEvent' is defined but never used.","'FormField' is defined but never used.","'Label' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'ValidationError' is defined but never used.","'Button' is defined but never used.","'Reveal' is defined but never used.","'MyTextArea' is defined but never used.","'da' is defined but never used.",["248"],["249"],"'Image' is defined but never used.","no-global-assign","no-unsafe-negation"]